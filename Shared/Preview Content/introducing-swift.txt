<html op="item"><head><meta name="referrer" content="origin"><meta name="viewport" content="width=device-width, initial-scale=1.0"><link rel="stylesheet" type="text/css" href="news.css?mrkzsHFUB3DwAIsyqoaR">
            <link rel="shortcut icon" href="favicon.ico">
        <title>Introducing Swift | Hacker News</title></head><body><center><table id="hnmain" border="0" cellpadding="0" cellspacing="0" width="85%" bgcolor="#f6f6ef">
        <tr><td bgcolor="#ff6600"><table border="0" cellpadding="0" cellspacing="0" width="100%" style="padding:2px"><tr><td style="width:18px;padding-right:4px"><a href="https://news.ycombinator.com"><img src="y18.gif" width="18" height="18" style="border:1px white solid;"></a></td>
                  <td style="line-height:12pt; height:10px;"><span class="pagetop"><b class="hnname"><a href="news">Hacker News</a></b>
              <a href="newest">new</a> | <a href="front">past</a> | <a href="newcomments">comments</a> | <a href="ask">ask</a> | <a href="show">show</a> | <a href="jobs">jobs</a> | <a href="submit">submit</a>            </span></td><td style="text-align:right;padding-right:4px;"><span class="pagetop">
                              <a href="login?goto=item%3Fid%3D7835099">login</a>
                          </span></td>
              </tr></table></td></tr>
<tr id="pagespace" title="Introducing Swift" style="height:10px"></tr><tr><td><table class="fatitem" border="0">
        <tr class='athing' id='7835099'>
      <td align="right" valign="top" class="title"><span class="rank"></span></td>      <td valign="top" class="votelinks"><center><a id='up_7835099' href='vote?id=7835099&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="title"><a href="https://developer.apple.com/swift/" class="storylink">Introducing Swift</a><span class="sitebit comhead"> (<a href="from?site=developer.apple.com"><span class="sitestr">developer.apple.com</span></a>)</span></td></tr><tr><td colspan="2"></td><td class="subtext">
        <span class="score" id="score_7835099">1216 points</span> by <a href="user?id=falava" class="hnuser">falava</a> <span class="age"><a href="item?id=7835099">on June 2, 2014</a></span> <span id="unv_7835099"></span> | <a href="hide?id=7835099&amp;goto=item%3Fid%3D7835099">hide</a> | <a href="https://hn.algolia.com/?query=Introducing%20Swift&sort=byDate&dateRange=all&type=story&storyText=false&prefix&page=0" class="hnpast">past</a> | <a href="https://www.google.com/search?q=Introducing%20Swift">web</a> | <a href="fave?id=7835099&amp;auth=921a4c5a2b9bcd2037b36171d9bc2876626c7a16">favorite</a> | <a href="item?id=7835099">712&nbsp;comments</a>              </td></tr>
        </table><br><br>
  <table border="0" class='comment-tree'>
            <tr class='athing comtr ' id='7835150'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="0"></td><td valign="top" class="votelinks"><center><a id='up_7835150' href='vote?id=7835150&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Udo" class="hnuser">Udo</a> <span class="age"><a href="item?id=7835150">on June 2, 2014</a></span> <span id="unv_7835150"></span><span class="par"></span> <a class="togg" n="130" href="javascript:void(0)" onclick="return toggle(event, 7835150)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">As someone who always disliked Objective C, I think Swift looks very promising. I&#x27;ll check it out right away :)<p>Software-wise, I feel these current WWDC announcements are the most exciting in years.<p>Looking at the Swift docs right now, I can see many interesting inspirations at work: there&#x27;s some Lua&#x2F;Go in there (multiple return values), some Ruby (closure passed as the last argument to a function can appear immediately after the parentheses), closure expressions, strong Unicode character support, a very very neat alternative to nullable types with &quot;<i>Optionals</i>&quot;. Operators are functions, too.<p>It has the concept of explicitly <i>capturing</i> variables from the surrounding context inside closures, like PHP does, instead of keeping the entire context alive forever like Ruby or JS.<p>Hell there is even some shell scripting thinking in there with shorthand arguments that can be used as anonymous parameters in closures, like &quot;sort(names, { $0 &gt; $1 } )&quot;.<p>Inside objects, properties can be initialized lazily the first time they&#x27;re accessed, or even updated entirely dynamically. Objects can swap themselves out for new versions of themselves under the caller&#x27;s nose by using the <i>mutating</i> keyword.<p>There is the expected heavy-weight class&#x2F;inheritance scheme which accommodates a lot of delegation, init options, bindings, and indirection (as is expected for a language that must among other things support Apple&#x27;s convoluted UI API). But at least it&#x27;s syntactically easier on the eyes now.<p>Automated Reference Counting is still alive, too - however, it&#x27;s mostly under the hood now. Accordingly, there is a lot of stuff that deals with the finer points of weak and strong binding&#x2F;counting.<p>Swift has a notion of <i>protocols</i> which as far as I can tell are interfaces or contracts that classes can promise to implement.<p>I think generally there are a few great patterns for method and object chaining, function and object composition in here.<p>The language has C#-style <i>generics</i>, and supports interesting type constraint expressions.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7835985'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7835985' href='vote?id=7835985&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=tptacek" class="hnuser">tptacek</a> <span class="age"><a href="item?id=7835985">on June 2, 2014</a></span> <span id="unv_7835985"></span><span class="par"></span> <a class="togg" n="25" href="javascript:void(0)" onclick="return toggle(event, 7835985)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I really don&#x27;t see the Golang influence at all. The multiple- return- value semantic is closer to Ruby&#x27;s than to Golang&#x27;s; you&#x27;re returning a tuple, which happens to have natural syntax in the language.<p>Defining Golang features that don&#x27;t exist in Swift:<p>- Interface types with implicit adoption (Swift takes explicit protocols from ObjC)<p>- Error types<p>- Relatedly, the &quot;damnable use requirement&quot; and its interaction with error types and multiple value returns (ie, the reason Golang programs in practice check errors more carefully than C programs).<p>- Slice types<p>- Type switching (though, like Golang, it does have type assertions)<p>- &quot;defer&quot;<p>- Of course, CSP and the &quot;select&quot; statement.<p>Swift features that don&#x27;t exist in Golang:<p>- Generics<p>- Optionals<p>- A conventional, full-featured class-model<p>Of the languages you could compare Swift to, Golang seems like one of the biggest reaches. Even the syntax is different.<p>(I like what I&#x27;ve read about Swift and expect to be building things in both Golang and Swift, and often at the same time).</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836137'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7836137' href='vote?id=7836137&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Udo" class="hnuser">Udo</a> <span class="age"><a href="item?id=7836137">on June 2, 2014</a></span> <span id="unv_7836137"></span><span class="par"></span> <a class="togg" n="7" href="javascript:void(0)" onclick="return toggle(event, 7836137)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">This comment surprises me. It&#x27;s factual but it&#x27;s not really a response to an actual claim I made. Did you really perceive that I alleged an extreme similarity to Go in my comment? If so, it certainly wasn&#x27;t intentional. I just said certain features reminded me of different languages, I didn&#x27;t mean to assert these languages are actually incorporated into Swift.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836202'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7836202' href='vote?id=7836202&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=tptacek" class="hnuser">tptacek</a> <span class="age"><a href="item?id=7836202">on June 2, 2014</a></span> <span id="unv_7836202"></span><span class="par"></span> <a class="togg" n="6" href="javascript:void(0)" onclick="return toggle(event, 7836202)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">No, no, I don&#x27;t object to your comment. You&#x27;re just not the only person I&#x27;ve seen making the comparison to Golang, and so I had a big comment bottled up. :)</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836224'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7836224' href='vote?id=7836224&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Udo" class="hnuser">Udo</a> <span class="age"><a href="item?id=7836224">on June 2, 2014</a></span> <span id="unv_7836224"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7836224)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Ah OK, I understand :)</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837588'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7837588' href='vote?id=7837588&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=georgehaake" class="hnuser">georgehaake</a> <span class="age"><a href="item?id=7837588">on June 3, 2014</a></span> <span id="unv_7837588"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837588)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">My hat is off to you gentlemen. Such civility. Good day to you Sirs. Good day.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7837706'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7837706' href='vote?id=7837706&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=jiyinyiyong" class="hnuser">jiyinyiyong</a> <span class="age"><a href="item?id=7837706">on June 3, 2014</a></span> <span id="unv_7837706"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7837706)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Including me, I think some syntaxes of Switft look like Go, while they actully don&#x27;t share the same vision. Go tries to be a language great for system programming so it introduces channels, interfaces. But Swift want to help GUI programming and it needs the whole class system but without crazy stuffs like channels.<p>But for others aspects that are not related these two(class system, concurrency), I would say they look quite similar.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838488'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7838488' href='vote?id=7838488&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=pjmlp" class="hnuser">pjmlp</a> <span class="age"><a href="item?id=7838488">on June 3, 2014</a></span> <span id="unv_7838488"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7838488)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">For Go to be great for systems programming, the unsafe package needs a few more primitives and better control over the GC.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7841152'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="240"></td><td valign="top" class="votelinks"><center><a id='up_7841152' href='vote?id=7841152&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=tptacek" class="hnuser">tptacek</a> <span class="age"><a href="item?id=7841152">on June 3, 2014</a></span> <span id="unv_7841152"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7841152)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I don&#x27;t know what this means. I&#x27;ve used Golang successfully for USB drivers, emulators, web and database servers, testing tools, a debugger, and cryptography. It seems evidently suited for systems programming as it stands.<p>Someone is always going to be out there saying that any language isn&#x27;t ready for prime time because it lacks feature-X.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
            <tr class='athing comtr ' id='7837250'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7837250' href='vote?id=7837250&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=ScottBurson" class="hnuser">ScottBurson</a> <span class="age"><a href="item?id=7837250">on June 2, 2014</a></span> <span id="unv_7837250"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837250)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Multiple return values are, of course, much older than Ruby or Go(lang).  The first language I used with them was Zetalisp (Lisp Machine Lisp) in 1979, though at about the same time, with the release of v7 Unix, C gained the ability to pass or return structs by value.  Xerox PARC&#x27;s Mesa appears to have had them a few years earlier.  I don&#x27;t know of any earlier examples.<p>I&#x27;m surprised not to hear Python mentioned, as it also has a tuple syntax.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7836747'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7836747' href='vote?id=7836747&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=mythz" class="hnuser">mythz</a> <span class="age"><a href="item?id=7836747">on June 2, 2014</a></span> <span id="unv_7836747"></span><span class="par"></span> <a class="togg" n="5" href="javascript:void(0)" onclick="return toggle(event, 7836747)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">It does share Go&#x27;s `func` keyword, parens-free conditionals, optional semi-colons</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837148'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7837148' href='vote?id=7837148&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=mseepgood" class="hnuser">mseepgood</a> <span class="age"><a href="item?id=7837148">on June 2, 2014</a></span> <span id="unv_7837148"></span><span class="par"></span> <a class="togg" n="4" href="javascript:void(0)" onclick="return toggle(event, 7837148)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">That&#x27;s really not a lot. The optional semicolons could also be influenced by BCPL or JavaScript.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838248'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7838248' href='vote?id=7838248&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=awalton" class="hnuser">awalton</a> <span class="age"><a href="item?id=7838248">on June 3, 2014</a></span> <span id="unv_7838248"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7838248)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Yeah, it&#x27;s only the entire basic Syntax of the language they copied.<p>Yes, Swift&#x27;s semantics are different (since it&#x27;s essentially a domain-specific language designed to make writing Cocoa apps faster), but syntax-wise a Go programmer feels right at home reading Swift.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7843864'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7843864' href='vote?id=7843864&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=coldtea" class="hnuser">coldtea</a> <span class="age"><a href="item?id=7843864">on June 4, 2014</a></span> <span id="unv_7843864"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7843864)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&gt;<i>Yeah, it&#x27;s only the entire basic Syntax of the language they copied.</i><p>Because, the keyword for function, keyword, parens-free conditionals and optional semi-colons are &quot;the entire basic syntax&quot; of Go, right?<p>Those are some of the most inconsequential details of Go syntax (all three of them), and of course all existed ages before Go.<p>Python has no semicolons and parens-free conditionals for one.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7838295'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7838295' href='vote?id=7838295&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=iv_08" class="hnuser">iv_08</a> <span class="age"><a href="item?id=7838295">on June 3, 2014</a></span> <span id="unv_7838295"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838295)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">If you mean by &quot;entire&quot; the spelling of one keyword and the omitting of parentheses. Everything else seems to be more related to C and various Action&#x2F;ECMAScript like scripting languages.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
          <tr class='athing comtr ' id='7836045'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7836045' href='vote?id=7836045&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=nardi" class="hnuser">nardi</a> <span class="age"><a href="item?id=7836045">on June 2, 2014</a></span> <span id="unv_7836045"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7836045)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&gt; - Interface types with implicit adoption (Swift takes explicit protocols from ObjC)<p>Objective-C has informal protocols, and so does Swift.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836839'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7836839' href='vote?id=7836839&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=curveship" class="hnuser">curveship</a> <span class="age"><a href="item?id=7836839">on June 2, 2014</a></span> <span id="unv_7836839"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836839)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Informal protocols and implicit interfaces are not the same thing.  In particular, implicit interfaces are type checked statically at compile time, while informal protocols are checked dynamically at runtime.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7836563'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7836563' href='vote?id=7836563&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=tomlu" class="hnuser">tomlu</a> <span class="age"><a href="item?id=7836563">on June 2, 2014</a></span> <span id="unv_7836563"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836563)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I&#x27;m assuming OP means structural typing, which Objective-C does not support.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7837226'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7837226' href='vote?id=7837226&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=rayiner" class="hnuser">rayiner</a> <span class="age"><a href="item?id=7837226">on June 2, 2014</a></span> <span id="unv_7837226"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837226)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Not just generics, but pretty fleshed out generics, with type variables constrained by class or protocol.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7836036'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7836036' href='vote?id=7836036&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=stcredzero" class="hnuser">stcredzero</a> <span class="age"><a href="item?id=7836036">on June 2, 2014</a></span> <span id="unv_7836036"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7836036)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00"><i>(I like what I&#x27;ve read about Swift and expect to be building things in both Golang and Swift, and often at the same time).</i><p>How about a blog series where a developer implements something in Golang and&#x2F;or Swift, then you explain how it&#x27;s insecure? Then the developer tries to fix it and you explain something else that&#x27;s insecure. Rinse, repeat.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837792'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7837792' href='vote?id=7837792&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=chc" class="hnuser">chc</a> <span class="age"><a href="item?id=7837792">on June 3, 2014</a></span> <span id="unv_7837792"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837792)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I thought that was called &quot;Hacker News comments.&quot;</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7836688'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7836688' href='vote?id=7836688&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=jamra" class="hnuser">jamra</a> <span class="age"><a href="item?id=7836688">on June 2, 2014</a></span> <span id="unv_7836688"></span><span class="par"></span> <a class="togg" n="4" href="javascript:void(0)" onclick="return toggle(event, 7836688)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Perhaps if you take language features directly, it&#x27;s not a good comparison with Go.<p>There are some things that did strike me as similar. The approach Go takes is to bring C language to a more modern world (i.e. C without some of the language burdens that we know so well). Swift is attempting to do the same. The way it does type inference is nice.<p>var x = &quot;Hi&quot; reminds me of Go&#x27;s const types. The ARC usage reminds me of Go&#x27;s garbage collection (even though it&#x27;s not the same thing). Basically, the parts that it omits from C are similar to the parts that Go takes out of C even though the language itself is different... thankfully.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837189'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7837189' href='vote?id=7837189&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=mseepgood" class="hnuser">mseepgood</a> <span class="age"><a href="item?id=7837189">on June 2, 2014</a></span> <span id="unv_7837189"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7837189)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&gt; The approach Go takes is to bring C language to a more modern world<p>Like all the other thousands of languages with C based syntax.<p>&gt; var x = &quot;Hi&quot; reminds me of Go&#x27;s const types<p>Why does it remind you of Go and not of all the other languages that use &#x27;var x = &quot;Hi&quot;&#x27; like JavaScript, ActionScript, C#, Scala, Kotlin?<p>&gt; The ARC usage reminds me of Go&#x27;s garbage collection<p>Why does it remind you of Go and not of all the other languages with garbage collection?</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838630'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7838630' href='vote?id=7838630&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=jamra" class="hnuser">jamra</a> <span class="age"><a href="item?id=7838630">on June 3, 2014</a></span> <span id="unv_7838630"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838630)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c5a">It reminds me of Go in what it omits from C. There are similarities. Go feels like a mix between python and C.<p>I haven&#x27;t gotten to Swift in a deep enough way, but it looks like it tried to tackle the same problems with the exception of concurrency. There are differences such as classes and generics in Swift. There are also similarities such as functions as first class citizens (or so it appears so from the closures section of the free book).<p>All in all, it reminds me of Go just a bit. It doesn&#x27;t remind me of all of those other languages that I do not know.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7837312'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7837312' href='vote?id=7837312&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=rayiner" class="hnuser">rayiner</a> <span class="age"><a href="item?id=7837312">on June 2, 2014</a></span> <span id="unv_7837312"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837312)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext cdd">&gt; Why does it remind you of Go and not of all the other languages with garbage collection?<p>You sound old. ;)</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838504'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7838504' href='vote?id=7838504&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=djhworld" class="hnuser">djhworld</a> <span class="age"><a href="item?id=7838504">on June 3, 2014</a></span> <span id="unv_7838504"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838504)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I think the style of defining functions is similar to Go. Not a carbon copy, but it &quot;feels&quot; Go-ish.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7836264'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7836264' href='vote?id=7836264&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=zenojevski" class="hnuser">zenojevski</a> <span class="age"><a href="item?id=7836264">on June 2, 2014</a></span> <span id="unv_7836264"></span><span class="par"></span> <a class="togg" n="60" href="javascript:void(0)" onclick="return toggle(event, 7836264)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">From a user&#x27;s point of view, it&#x27;s basically straight out of the Rust book, all the gravy with also relaxed ownership and syntax.<p>It has it all [1]: static typing, type inference, explicit mutability, closures, pattern matching, optionals (with own syntax! also &quot;any&quot;), generics, interfaces, weak ownership, tuples, plus other nifty things like shorthand syntax, final and explicit override...<p>It screams &quot;modern!&quot;, has all the latest circlejerk features. It even comes with a light-table&#x2F;bret-victor style playground. But is still a practical language which looks approachable and straightforward.<p>Edit: [1]: well, almost. I don&#x27;t think I&#x27;ve caught anything about generators, first-class concurrency and parallelism, or tail-call optimization, among others.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837038'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7837038' href='vote?id=7837038&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=stormbrew" class="hnuser">stormbrew</a> <span class="age"><a href="item?id=7837038">on June 2, 2014</a></span> <span id="unv_7837038"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837038)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I don&#x27;t really see anything but a superficial resemblance to rust, where both are borrowing ideas from the same place. Where Rust really differs from modern algol-family-languages-learning-from-30-year-old-functional-programming-research is in its strictness.<p>The optional type stuff is good, and it will definitely be a net safety improvement, but it&#x27;s by no means attempting to approach a panacea to safety like Rust&#x27;s strict static analysis does.<p>Particularly that Swift gives you really simple outs in the form of the &#x27;!&#x27; unwrap and &#x27;as&#x27; (should be &#x27;as!&#x27; at least imo) downcast-and-unwrap operators that result in run-time errors and will probably be seen as unremoveable code-smell in a couple of years.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7836525'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7836525' href='vote?id=7836525&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=kibwen" class="hnuser">kibwen</a> <span class="age"><a href="item?id=7836525">on June 2, 2014</a></span> <span id="unv_7836525"></span><span class="par"></span> <a class="togg" n="58" href="javascript:void(0)" onclick="return toggle(event, 7836525)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Indeed, I&#x27;m not sure what Swift&#x27;s concurrency story is yet. Other than that it&#x27;s encouragingly similar to Rust (we&#x27;re evolving in the right direction!), but not quite as low-level.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836653'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7836653' href='vote?id=7836653&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=mkehrt" class="hnuser">mkehrt</a> <span class="age"><a href="item?id=7836653">on June 2, 2014</a></span> <span id="unv_7836653"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836653)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I&#x27;m sure that the main mechanism will be the existing dispatch queue libraries Apple&#x27;s other languages use.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7837005'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7837005' href='vote?id=7837005&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=pjmlp" class="hnuser">pjmlp</a> <span class="age"><a href="item?id=7837005">on June 2, 2014</a></span> <span id="unv_7837005"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837005)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Most likely use the Grand Central Dispatch that is already part of iOS and Mac OS X.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7836937'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7836937' href='vote?id=7836937&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Pacabel" class="hnuser">Pacabel</a> <span class="age"><a href="item?id=7836937">on June 2, 2014</a></span> <span id="unv_7836937"></span><span class="par"></span> <a class="togg" n="55" href="javascript:void(0)" onclick="return toggle(event, 7836937)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext cae">The similarity to Rust should scare the hell out of Rust&#x27;s creators and proponents.<p>Swift could very well render Rust almost totally irrelevant within the OS X and iOS sphere of software development. If we end up eventually seeing Swift implemented for other platforms, then the chances of Rust&#x27;s long-term success diminish even more.<p>Things might have been different had a stable, even if somewhat imperfect, initial version of Rust had been released by now, thus allowing it to gain some adoption and traction.<p>I hope that the &quot;But Rust isn&#x27;t targeting those developers!&quot; argument isn&#x27;t used to try to justify this mistake, as well. Rust is already facing stiff competition from languages like Go, C++11, C++14, Scala and even Java 8.<p>With the announcement of Swift, Rust&#x27;s niche and audience are getting smaller, further preventing the widespread adoption that&#x27;s necessary for a programming language to become truly successful.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837002'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7837002' href='vote?id=7837002&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=kibwen" class="hnuser">kibwen</a> <span class="age"><a href="item?id=7837002">on June 2, 2014</a></span> <span id="unv_7837002"></span><span class="par"></span> <a class="togg" n="33" href="javascript:void(0)" onclick="return toggle(event, 7837002)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Oh hello again, Pacabel. I&#x27;m familiar with your game by now. :)<p>We&#x27;re not scared in the slightest. I&#x27;ll reconsider when Swift has inline ASM, allocators, linear types, move semantics by default, region analysis, and a type system that guarantees freedom from data races (oh, and when the code is open-sourced, and targets both Linux and Windows as a first-class citizen).<p>Swift isn&#x27;t intended to be a systems language: it&#x27;s an application language. Anyone who&#x27;s capable of choosing Swift as of today was just as capable of choosing Objective-C yesterday. And as the Rust developers themselves have discovered over the past two years, deciding to become a systems language doesn&#x27;t happen overnight.<p>(In fact, on a personal note, I&#x27;m <i>ecstatic</i> that Swift has been announced. ADTs! Optional types! Pattern matching! <i>Think of how many features are no longer alien to people who want to learn Rust!</i> And hell, the syntax is incredibly similar as well, which further reduces friction. As a hardcore Rust contributor, I want to shake the hand of each and every one of Swift&#x27;s designers.)</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837283'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7837283' href='vote?id=7837283&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=pohl" class="hnuser">pohl</a> <span class="age"><a href="item?id=7837283">on June 2, 2014</a></span> <span id="unv_7837283"></span><span class="par"></span> <a class="togg" n="5" href="javascript:void(0)" onclick="return toggle(event, 7837283)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00"><i>Swift isn&#x27;t intended to be a systems language</i><p>FWIW, Swift is categorized as a systems language in the opening pages.  But, then, so does Go in its FAQ. To Swift&#x27;s credit, at least it has deterministic memory management through ARC.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838304'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="240"></td><td valign="top" class="votelinks"><center><a id='up_7838304' href='vote?id=7838304&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=mzl" class="hnuser">mzl</a> <span class="age"><a href="item?id=7838304">on June 3, 2014</a></span> <span id="unv_7838304"></span><span class="par"></span> <a class="togg" n="4" href="javascript:void(0)" onclick="return toggle(event, 7838304)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">While having some support for garbage collection is good, reference counting is not is a rather expensive way to implement that for applications. This becomes especially bad in multicores since it may dramatically increase the number of writes to shared object cache lines.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7839823'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="280"></td><td valign="top" class="votelinks"><center><a id='up_7839823' href='vote?id=7839823&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=pohl" class="hnuser">pohl</a> <span class="age"><a href="item?id=7839823">on June 3, 2014</a></span> <span id="unv_7839823"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7839823)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Wouldn&#x27;t a lot of that be mitigated, though, by using tagged pointers in place of RC structs where possible? Seems like an obvious optimization.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7844293'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="320"></td><td valign="top" class="votelinks"><center><a id='up_7844293' href='vote?id=7844293&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=mzl" class="hnuser">mzl</a> <span class="age"><a href="item?id=7844293">on June 4, 2014</a></span> <span id="unv_7844293"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7844293)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Not really sure what the tag in the pointer would be used for. Could you give an example.<p>In general, reference counting has the problem that it needs to update the reference count. If you have a read-only data-structure these updates to the references will introduce writes that may severely impact performance since a write introduces cache consistency communication, while reads are communication-free.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7845240'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="360"></td><td valign="top" class="votelinks"><center><a id='up_7845240' href='vote?id=7845240&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=pohl" class="hnuser">pohl</a> <span class="age"><a href="item?id=7845240">on June 4, 2014</a></span> <span id="unv_7845240"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7845240)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Yeah, you&#x27;re right. I didn&#x27;t think it through when I asked. I conflated this scenario with the technique they use to put small objects like NSNumber on the stack.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
            <tr class='athing comtr ' id='7837532'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7837532' href='vote?id=7837532&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=vor_" class="hnuser">vor_</a> <span class="age"><a href="item?id=7837532">on June 3, 2014</a></span> <span id="unv_7837532"></span><span class="par"></span> <a class="togg" n="7" href="javascript:void(0)" onclick="return toggle(event, 7837532)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&gt; Swift isn&#x27;t intended to be a systems language: it&#x27;s an application language.<p>It may not be ready as a systems language in its pre-1.0 form, but the Swift book claims that it&#x27;s &quot;designed to scale gracefully from ‘Hello World’ to an entire operating system&quot;, so Apple appears to have big goals.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837612'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="240"></td><td valign="top" class="votelinks"><center><a id='up_7837612' href='vote?id=7837612&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=jsmthrowaway" class="hnuser">jsmthrowaway</a> <span class="age"><a href="item?id=7837612">on June 3, 2014</a></span> <span id="unv_7837612"></span><span class="par"></span> <a class="togg" n="6" href="javascript:void(0)" onclick="return toggle(event, 7837612)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I&#x27;m thinking about starting the &quot;Rust contributor points out how Rust is a systems language and $language is an applications language&quot; drinking game. At least now they&#x27;ll focus on Swift instead of Go. I don&#x27;t mean this to be rude; I&#x27;ve just noticed a similar set of usernames in threads about certain !Rust languages playing the underdog position and always feeling like they need to compare.<p>Given Rust&#x27;s PR, speaking of that -- not a thread about Go passes without at least three pcwalton comments these days -- I actually broke down and gave it a try. I wrote a little Hello World server and then got lambasted by a friend of mine for not working functionally, since, in his words, &quot;Rust is a functional language and the fact that it supports other paradigms is a mistake.&quot; I rm -rf&#x27;d and ignore it for now, but I look forward to it stabilizing and maybe coming back to it.<p>Rust has potential but the PR needs to ease up just a little. There <i>is</i> room for more than one language in the world.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838093'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="280"></td><td valign="top" class="votelinks"><center><a id='up_7838093' href='vote?id=7838093&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=nnethercote" class="hnuser">nnethercote</a> <span class="age"><a href="item?id=7838093">on June 3, 2014</a></span> <span id="unv_7838093"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7838093)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&gt; not a thread about Go passes without at least three pcwalton comments these days<p>Well, every thread about Go inevitably has numerous comments comparing it to Rust, often erroneously, and pcwalton is one of the primary Rust developers.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838371'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="320"></td><td valign="top" class="votelinks"><center><a id='up_7838371' href='vote?id=7838371&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=jsmthrowaway" class="hnuser">jsmthrowaway</a> <span class="age"><a href="item?id=7838371">on June 3, 2014</a></span> <span id="unv_7838371"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838371)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">A fair point.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7838007'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="280"></td><td valign="top" class="votelinks"><center><a id='up_7838007' href='vote?id=7838007&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=dbaupp" class="hnuser">dbaupp</a> <span class="age"><a href="item?id=7838007">on June 3, 2014</a></span> <span id="unv_7838007"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838007)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Rust is not a functional programming language. Your friend is just wrong for taking you to task about that.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7837753'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="280"></td><td valign="top" class="votelinks"><center><a id='up_7837753' href='vote?id=7837753&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=ben0x539" class="hnuser">ben0x539</a> <span class="age"><a href="item?id=7837753">on June 3, 2014</a></span> <span id="unv_7837753"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7837753)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Sign me up for a &quot;someone gets indignant about rust developers responding to other people&#x27;s comments about rust&quot; drinking game.<p>(small-time rust contributor here too)</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838360'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="320"></td><td valign="top" class="votelinks"><center><a id='up_7838360' href='vote?id=7838360&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=jsmthrowaway" class="hnuser">jsmthrowaway</a> <span class="age"><a href="item?id=7838360">on June 3, 2014</a></span> <span id="unv_7838360"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838360)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c5a">I think you should look up what &quot;indignant&quot; means, then, for the benefit of all of us, demonstrate the anger in my comment that was not put there unconsciously by the reader.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
          <tr class='athing comtr ' id='7837096'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7837096' href='vote?id=7837096&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=VeejayRampay" class="hnuser">VeejayRampay</a> <span class="age"><a href="item?id=7837096">on June 2, 2014</a></span> <span id="unv_7837096"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7837096)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I saw a lot of people mention ADT in relation to Swift but I haven&#x27;t found examples in the documentation book I downloaded from Apple. Would you be kind enough to provide the example you saw?
EDIT: My bad, page 40 in the section about protocols (unless I&#x27;m missing something).</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837979'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="240"></td><td valign="top" class="votelinks"><center><a id='up_7837979' href='vote?id=7837979&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=tel" class="hnuser">tel</a> <span class="age"><a href="item?id=7837979">on June 3, 2014</a></span> <span id="unv_7837979"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7837979)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">It&#x27;s on the bottom half of the page about enumerations. Typically languages have product types, but lack true sum types. Swift&#x27;s enums provide such leverage.<p>That said, Swift&#x27;s types are a bit less than recursive, so there&#x27;s a bit of niggling still before you get to the affordances of something like Haskell&#x27;s `data`.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7841000'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="280"></td><td valign="top" class="votelinks"><center><a id='up_7841000' href='vote?id=7841000&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=VeejayRampay" class="hnuser">VeejayRampay</a> <span class="age"><a href="item?id=7841000">on June 3, 2014</a></span> <span id="unv_7841000"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7841000)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Thank you.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837182'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7837182' href='vote?id=7837182&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=jsmthrowaway" class="hnuser">jsmthrowaway</a> <span class="age"><a href="item?id=7837182">on June 2, 2014</a></span> <span id="unv_7837182"></span><span class="par"></span> <a class="togg" n="6" href="javascript:void(0)" onclick="return toggle(event, 7837182)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c5a">It&#x27;s interesting that inline assembly is your first bullet point, since there&#x27;s nothing I can think of that ruins a code file more than inline assembly in a host language. Put that crap in a .S file and link it in like everything else, for crying out loud. The <i>one</i> time you need inline assembly is when you don&#x27;t want to build a function frame, such as a tight loop, but come on.<p>Also, even in systems, I can think of about once a decade I even need to write assembly, so... maybe grasping at straws a bit?</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837354'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="240"></td><td valign="top" class="votelinks"><center><a id='up_7837354' href='vote?id=7837354&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=pcwalton" class="hnuser">pcwalton</a> <span class="age"><a href="item?id=7837354">on June 3, 2014</a></span> <span id="unv_7837354"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7837354)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I wouldn&#x27;t lead with inline assembler as the selling point of Rust. The main selling point of Rust is memory safety without garbage collection; it still is the only industry language that allows this (as reference counting is a form of GC).<p>That said, I think inline assembler is an important feature:<p>&gt; 
It&#x27;s interesting that inline assembly is your first bullet point, since there&#x27;s nothing I can think of that ruins a code file more than inline assembly in a host language. Put that crap in a .S file and link it in like everything else, for crying out loud.<p>That&#x27;s too slow. You need to give the optimizer more information than that, and the overhead of the procedure call can be significant.<p>&gt; The one time you need inline assembly is when you don&#x27;t want to build a function frame, such as a tight loop, but come on.<p>But that&#x27;s a very important use case.<p>&gt; Also, even in systems, I can think of about once a decade I even need to write assembly, so... maybe grasping at straws a bit?<p>It&#x27;s all over the place in the Linux kernel.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837603'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="280"></td><td valign="top" class="votelinks"><center><a id='up_7837603' href='vote?id=7837603&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=jsmthrowaway" class="hnuser">jsmthrowaway</a> <span class="age"><a href="item?id=7837603">on June 3, 2014</a></span> <span id="unv_7837603"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837603)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c9c">&gt; But that&#x27;s a very important use case.<p>For Rust. I didn&#x27;t make the comparison to Rust, I merely was intrigued by the choice of features and in which order to defend the comparison made by someone else. I see Rust and Swift as targeting entirely different things, at least at first (which means that Swift can certainly evolve inline assembly if it is so needed), and any comparison at this stage is pointless.<p>&gt; It&#x27;s all over the place in the Linux kernel.<p>Cool, that&#x27;s one piece of software. I&#x27;ll save you the next few: drivers and a couple files in a game engine. You&#x27;re disputing my point how, exactly?</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7837656'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="240"></td><td valign="top" class="votelinks"><center><a id='up_7837656' href='vote?id=7837656&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=kibwen" class="hnuser">kibwen</a> <span class="age"><a href="item?id=7837656">on June 3, 2014</a></span> <span id="unv_7837656"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7837656)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I&#x27;m confused that you seem to think that my bullet points are ordered from most to least important. It seems like quite a strange thing to attack! I&#x27;m sorry to disappoint you, but I do not run these comments by a team of editors first. :)<p>That said, judging by your other comments, you seem to be of the impression that the Rust team has some sort of vendetta against Go, and have concocted a vendetta in kind. Again, I must sadly disappoint you, but I strive to encourage a culture of respect in all the forums that I visit (and moderate).</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838340'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="280"></td><td valign="top" class="votelinks"><center><a id='up_7838340' href='vote?id=7838340&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=jsmthrowaway" class="hnuser">jsmthrowaway</a> <span class="age"><a href="item?id=7838340">on June 3, 2014</a></span> <span id="unv_7838340"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838340)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c5a">If you find my comments disrespectful and think I&#x27;m implying you have a vendetta, you skimmed them and are disrespecting <i>me</i> by putting words in my mouth. I&#x27;ve simply noticed a trend of most commentary from Rust contributors taking the underdog position and participating in picking apart other (ostensibly) competing languages, and I think you guys should stop doing that.<p>The last sentence of the comment to which you hint is my thesis. There is no subtext. It&#x27;s easy to perceive negative opinions as attacks and create an adversary from the person writing the opinion, but it&#x27;s also a little bit disingenuous. It also, conveniently, creates a platform upon which nobody can disagree with you lest they be hostile and aggressive. You can then exit on the &quot;high ground,&quot; as you&#x27;ve done here.<p>I meant no ill will. Best of luck, I guess.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7837479'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="240"></td><td valign="top" class="votelinks"><center><a id='up_7837479' href='vote?id=7837479&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=haberman" class="hnuser">haberman</a> <span class="age"><a href="item?id=7837479">on June 3, 2014</a></span> <span id="unv_7837479"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837479)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&gt; The one time you need inline assembly is when you don&#x27;t want to build a function frame, such as a tight loop, but come on.<p>This is hilarious.  Like anyone would ever use inline assembly in a tight loop.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7837277'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7837277' href='vote?id=7837277&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Pacabel" class="hnuser">Pacabel</a> <span class="age"><a href="item?id=7837277">on June 2, 2014</a></span> <span id="unv_7837277"></span><span class="par"></span> <a class="togg" n="11" href="javascript:void(0)" onclick="return toggle(event, 7837277)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext cdd">My apologies, I didn&#x27;t realize that expecting a programming language to have a stable syntax, stable semantics, a stable standard library and at least one stable and robust implementation before using it seriously in industry was merely a &quot;game&quot;.<p>Perhaps this is news to you, but those of us who work on and are responsible for large-scale software systems tend to take such factors very seriously.<p>This may sound harsh, but it really doesn&#x27;t matter what features and benefits Rust could potentially bring to the table if the lack of stability makes it unusable in practice today. A programming language that can&#x27;t be seriously used might as well not even exist.<p>I don&#x27;t doubt that Apple will have Swift available in a seriously usable form by this fall, and it&#x27;s very likely that it will see rapid adoption soon after. I&#x27;m afraid I can&#x27;t say the same about Rust and its supposed by-the-end-of-2014 1.0 release, given its current lack of stability and the rapidly-approaching end of the year.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837428'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="240"></td><td valign="top" class="votelinks"><center><a id='up_7837428' href='vote?id=7837428&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=BrandonM" class="hnuser">BrandonM</a> <span class="age"><a href="item?id=7837428">on June 3, 2014</a></span> <span id="unv_7837428"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7837428)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">You seem to desire both stability <i>and</i> a faster 1.0 release. The realistic choices are:<p><pre><code>    1. Release fast and iterate
    2. Release fast and be stuck with mistakes
    3. Release slow
</code></pre>
Option #1 breaks stability, so that&#x27;s out.<p>Swift appears to be taking option #2 (Apple doesn&#x27;t commonly break APIs, do they?), but we can&#x27;t even really be sure because it hasn&#x27;t been developed in the open the way that Rust has. It&#x27;s possible that it&#x27;s been in development as long as Rust, and we simply haven&#x27;t heard about it yet. Either way, option #2 is a perfectly reasonable one to go with; it has served Java quite well (for a loose definition of <i>fast</i>), though it has required some creative approaches to language improvements.<p>Rust is taking option #3. C has been around for over 40 years now. If Rust hopes to supplant it, it seems reasonable to take a few extra months (or even an extra year) to put out a solid version 1 that won&#x27;t hamstring the language or force a breaking change down the line.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837771'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="280"></td><td valign="top" class="votelinks"><center><a id='up_7837771' href='vote?id=7837771&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=kainosnoema" class="hnuser">kainosnoema</a> <span class="age"><a href="item?id=7837771">on June 3, 2014</a></span> <span id="unv_7837771"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837771)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Apple just announced in the Platform State of the Union that they won&#x27;t guarantee source compatibility until Swift is released along with iOS 8 (changes to the language will require source conversions), so I believe they&#x27;re taking a route closer to option #1.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7849708'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="280"></td><td valign="top" class="votelinks"><center><a id='up_7849708' href='vote?id=7849708&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=taharvey" class="hnuser">taharvey</a> <span class="age"><a href="item?id=7849708">on June 5, 2014</a></span> <span id="unv_7849708"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7849708)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">No I&#x27;d say Apples approach was: methodically develop until very polished first, then announce after. You just didn&#x27;t get to see the 0.1, 0.2, 0.3... versions.<p>This is actually nice, because knowing about languages years before they are production ready probably just slows developer adoption because nobody is quite sure when they should trust there development process to a new language.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7837483'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="240"></td><td valign="top" class="votelinks"><center><a id='up_7837483' href='vote?id=7837483&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=coldtea" class="hnuser">coldtea</a> <span class="age"><a href="item?id=7837483">on June 3, 2014</a></span> <span id="unv_7837483"></span><span class="par"></span> <a class="togg" n="7" href="javascript:void(0)" onclick="return toggle(event, 7837483)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&gt;<i>My apologies, I didn&#x27;t realize that expecting a programming language to have a stable syntax, stable semantics, a stable standard library and at least one stable and robust implementation before using it seriously in industry was merely a &quot;game&quot;</i><p>You also didn&#x27;t realize that you just built the biggest strawman ever in the above sentence.<p>Enough with the &quot;I want a stable Rust now&quot;. Rust, like any other language, takes years to stabilize. You just happen to see it happen in the open, whereas most other languages you get them at their 1.0 release.<p>&gt;<i>This may sound harsh, but it really doesn&#x27;t matter what features and benefits Rust could potentially bring to the table if the lack of stability makes it unusable in practice today. A programming language that can&#x27;t be seriously used might as well not even exist.</i><p>They could not give a flying duck about it being &quot;seriously used today&quot;.<p>They&#x27;ll start to care AFTER they release it as 1.0. They only released this 0.x versions to solicit ideas and improvements, not to get programmer&#x27;s to adopt it.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837536'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="280"></td><td valign="top" class="votelinks"><center><a id='up_7837536' href='vote?id=7837536&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Pacabel" class="hnuser">Pacabel</a> <span class="age"><a href="item?id=7837536">on June 3, 2014</a></span> <span id="unv_7837536"></span><span class="par"></span> <a class="togg" n="6" href="javascript:void(0)" onclick="return toggle(event, 7837536)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c88">Well, we aren&#x27;t actually seeing stabilization when it comes to Rust.<p>Assuming this stabilization actually does happen, whether it happens in public or private is irrelevant.<p>What matters is that we&#x27;ve seen C++ stabilize. We&#x27;ve seen Go stabilize. We&#x27;ve seen Scala stabilize. And now we&#x27;ll likely see Swift stabilize, well before Rust does. They are all serious competitors to Rust.<p>As these other languages continue to evolve, but at the same time remaining usable, the relevance of Rust will continually decrease. It may still have drawing power today. A few years from now, it will have less appeal.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837757'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="320"></td><td valign="top" class="votelinks"><center><a id='up_7837757' href='vote?id=7837757&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=enneff" class="hnuser">enneff</a> <span class="age"><a href="item?id=7837757">on June 3, 2014</a></span> <span id="unv_7837757"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837757)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">This is silly. Rust is on a similar time frame to Go in terms of stabilization (~2.5 years after release).<p>It&#x27;s hard to make a comparison against Swift, which is a proprietary language developed for years behind closed doors. Presumably they&#x27;re at 1.0 from the first day by design. You can&#x27;t do that with open source languages.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7838054'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="320"></td><td valign="top" class="votelinks"><center><a id='up_7838054' href='vote?id=7838054&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=TheHydroImpulse" class="hnuser">TheHydroImpulse</a> <span class="age"><a href="item?id=7838054">on June 3, 2014</a></span> <span id="unv_7838054"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7838054)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">* Scala has been around since 2004 (public release) -- 10 years ago. (Not sure when the first stable release was but more than 3 years.)
* Go in 2009 (public) -- 6 years ago. 1.0 (first stable release) was released in 2012 so it took 3 years to stabilize.
* C++ in 1983 -- 31 years ago. ... It&#x27;s been a long time.
* Clojure in 2007 -- 7 years ago. The creator took 2 1&#x2F;2 years before releasing it to the public.
* Rust in 2012 -- 2 years ago.<p>It&#x27;s pretty absurd to expect Rust to be stable right from the get go. The difference in all this is that most of those languages were closed before being released. Rust was open at a pretty early state.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838308'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="360"></td><td valign="top" class="votelinks"><center><a id='up_7838308' href='vote?id=7838308&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=iv_08" class="hnuser">iv_08</a> <span class="age"><a href="item?id=7838308">on June 3, 2014</a></span> <span id="unv_7838308"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7838308)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">You&#x27;re probably right, but I think I&#x27;ve heard of Rust in public in 2010 and that it was started by Graydon in 2007.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838341'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="400"></td><td valign="top" class="votelinks"><center><a id='up_7838341' href='vote?id=7838341&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=kibwen" class="hnuser">kibwen</a> <span class="age"><a href="item?id=7838341">on June 3, 2014</a></span> <span id="unv_7838341"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838341)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Rust had been stewing around in Graydon&#x27;s head for years, but he was never paid to work on it until 2009 (part-time, at that point). And he didn&#x27;t have any paid employees to help him until 2010 (that would be pcwalton). And as far as I&#x27;m concerned, Rust development didn&#x27;t <i>actually</i> start in earnest until mid-to-late 2011, when the compiler began bootstrapping. And the Rust that we know and love today didn&#x27;t begin to take shape until 2012, when borrowed references started taking shape.<p>Personally, I consider the 0.1 release in January 2012 to mark Rust&#x27;s &quot;birthday&quot;. Everything prior to that was just gestation. :)</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837696'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="320"></td><td valign="top" class="votelinks"><center><a id='up_7837696' href='vote?id=7837696&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=BrandonM" class="hnuser">BrandonM</a> <span class="age"><a href="item?id=7837696">on June 3, 2014</a></span> <span id="unv_7837696"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837696)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I can&#x27;t tell if you like Rust or hate it. If you hate it, and you are right, then it will simply fade away and your comments will serve nothing more than being able to say, &quot;I told you so.&quot; If you are wrong, then you end up looking a bit silly.<p>If you like it, perhaps you should be a little patient and give the creators the benefit of the doubt. No one wants a Rust 3.0 fiasco.<p>It&#x27;s hard to encounter language issues without implementing a large project in the language. I am happy that they&#x27;re taking the time to let the implementation of Servo help inform the design of Rust.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
            <tr class='athing comtr ' id='7837336'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7837336' href='vote?id=7837336&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=pcwalton" class="hnuser">pcwalton</a> <span class="age"><a href="item?id=7837336">on June 3, 2014</a></span> <span id="unv_7837336"></span><span class="par"></span> <a class="togg" n="18" href="javascript:void(0)" onclick="return toggle(event, 7837336)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Rust&#x27;s raison d&#x27;être is memory safety without garbage collection. Swift requires garbage collection to achieve memory safety. (Reference counting is a form of garbage collection.)<p>In other words, Rust is about safety with <i>zero overhead</i> over C++, and Swift is not zero-overhead. So the people who need Rust are not going to use Swift for Rust&#x27;s domains. That&#x27;s fine, as Apple wanted a language for iOS and Mac app development with tight integration with Objective-C, and from what I&#x27;ve seen they&#x27;ve done a great job of developing one.<p>&gt; Things might have been different had a stable, even if somewhat imperfect, initial version of Rust had been released by now, thus allowing it to gain some adoption and traction.<p>Why are you so insistent that we freeze an unsafe version of a language that&#x27;s designed for safety?</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837352'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7837352' href='vote?id=7837352&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=dbaupp" class="hnuser">dbaupp</a> <span class="age"><a href="item?id=7837352">on June 3, 2014</a></span> <span id="unv_7837352"></span><span class="par"></span> <a class="togg" n="10" href="javascript:void(0)" onclick="return toggle(event, 7837352)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00"><i>&gt; Why are you so insistent that we freeze an unsafe version of a language that&#x27;s designed for safety?</i><p>Pacabel has made a career of complaining about Rust being unstable.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837528'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="240"></td><td valign="top" class="votelinks"><center><a id='up_7837528' href='vote?id=7837528&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=nnethercote" class="hnuser">nnethercote</a> <span class="age"><a href="item?id=7837528">on June 3, 2014</a></span> <span id="unv_7837528"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837528)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">At least he&#x2F;she hasn&#x27;t derailed the thread by complaining about every other project that Mozilla is working on. I count that as progress!</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7837410'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="240"></td><td valign="top" class="votelinks"><center><a id='up_7837410' href='vote?id=7837410&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Pacabel" class="hnuser">Pacabel</a> <span class="age"><a href="item?id=7837410">on June 3, 2014</a></span> <span id="unv_7837410"></span><span class="par"></span> <a class="togg" n="8" href="javascript:void(0)" onclick="return toggle(event, 7837410)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext cdd">Are you honestly suggesting that Rust is stable at this point?<p>I think that the recent, and very disruptive, ~ and box changes should completely dispel that notion.<p>I&#x27;m merely pointing out the reality of the current situation, which some in the Rust community do not wish to acknowledge, for whatever reason. The situation has yet to change, so what I&#x27;m saying is still valid, and will remain so until some actual improvement does take place.<p>Now that we see yet another serious competitor in the form of Swift, what I&#x27;ve had to unfortunately be saying for some time now becomes more and more relevant. If Rust is to become relevant, it will need to be usable, and that will need to happen very quickly.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837456'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="280"></td><td valign="top" class="votelinks"><center><a id='up_7837456' href='vote?id=7837456&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=dbaupp" class="hnuser">dbaupp</a> <span class="age"><a href="item?id=7837456">on June 3, 2014</a></span> <span id="unv_7837456"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7837456)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">No, I&#x27;m not suggesting that Rust is stable. It wasn&#x27;t even slightly implied by what I said. I was just pointing out that you&#x27;re a broken record on this topic, to the point of being a troll (you seem to just ignore the meat of any response you get and only focus on the current state of Rust).<p>To be crystal clear: no-one is suggesting that Rust is stable and no-one is suggesting it is ready for adoption (if they are, they are wrong). However, being unstable now is very very different to not ever being stable.<p>In any case, Swift is only tangentially a Rust competitor as kibwen demonstrated.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837509'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="320"></td><td valign="top" class="votelinks"><center><a id='up_7837509' href='vote?id=7837509&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Pacabel" class="hnuser">Pacabel</a> <span class="age"><a href="item?id=7837509">on June 3, 2014</a></span> <span id="unv_7837509"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7837509)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext cdd">Resort to name-calling if you really must. None of that will change reality.<p>Rust is not stable, as you yourself have readily admitted. What I&#x27;ve unfortunately had to be pointing out for such a long time now is absolutely correct.<p>We&#x27;ve been told that we can expect Rust 1.0 by the end of the year. As each month passes, it becomes less and less likely that we will actually see this. We are still seeing significant change, even as recently as the past month.<p>I think Rust could potentially be very useful. But that requires stability, and that in turn is something that appears more and more elusive each day.<p>It&#x27;s easy to say that Swift isn&#x27;t a competitor to Rust, but the reality is that it is. And unlike Rust, it will very, very likely be usable for serious apps within a few months. It will see the adoption that Rust could have had, had it been usable, further reducing Rust&#x27;s future changes.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837635'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="360"></td><td valign="top" class="votelinks"><center><a id='up_7837635' href='vote?id=7837635&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=dbaupp" class="hnuser">dbaupp</a> <span class="age"><a href="item?id=7837635">on June 3, 2014</a></span> <span id="unv_7837635"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837635)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">What have you been pointing out for so long? That Rust is unstable? That many people&#x2F;companies won&#x27;t use Rust while it is unstable? That there are other languages people can use instead?<p>All of those are highly uncontroversial and universally acknowledged by experienced Rust users.<p>Also, I don&#x27;t understand how you have lept from Rust being unstable now, to Rust never being stable.<p>A 1.0 release by the end of the year doesn&#x27;t seem at all unreasonable to me; I think you are expecting more from it than what the Rust team is looking for (and have stated publicly repeatedly): stabilising the core language.<p>Of course, a stable release of that form will still mean some libraries may be unstable (and so that Rust would be unsuitable for many corporate developments). These libraries will be stabilised progressively and iteratively.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837520'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="280"></td><td valign="top" class="votelinks"><center><a id='up_7837520' href='vote?id=7837520&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=coldtea" class="hnuser">coldtea</a> <span class="age"><a href="item?id=7837520">on June 3, 2014</a></span> <span id="unv_7837520"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7837520)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&gt;<i>Are you honestly suggesting that Rust is stable at this point? I think that the recent, and very disruptive, ~ and box changes should completely dispel that notion.</i><p>No, he merely suggests that you bored a lot of people by repeating that it&#x27;s unstable, instead of accepting the fact and using something else.<p>If being unstable is that bad, then by all means, go and use a stable language.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837553'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="320"></td><td valign="top" class="votelinks"><center><a id='up_7837553' href='vote?id=7837553&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Pacabel" class="hnuser">Pacabel</a> <span class="age"><a href="item?id=7837553">on June 3, 2014</a></span> <span id="unv_7837553"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7837553)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext cdd">I, and many others, do use something else. That&#x27;s the big problem facing Rust, whether or not its creators wish to admit this fact.<p>There are numerous alternatives to Rust that offer many of its benefits, but they&#x27;re usable today. We can rely on them today, tomorrow, and likely for some time to come.<p>And by this fall, we&#x27;ll likely have Swift as yet another option to add to our growing list.<p>I think Rust has a lot of potential. But each month that goes by squanders that potential. It has less and less of a chance of making a real impact the longer it isn&#x27;t usable, especially while its competitors keep evolving.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7845025'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="360"></td><td valign="top" class="votelinks"><center><a id='up_7845025' href='vote?id=7845025&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=coldtea" class="hnuser">coldtea</a> <span class="age"><a href="item?id=7845025">on June 4, 2014</a></span> <span id="unv_7845025"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7845025)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&gt;<i>I, and many others, do use something else. That&#x27;s the big problem facing Rust, whether or not its creators wish to admit this fact.</i><p>Yeah, and I listen to Rihanna instead of Jay Farrar. Obviously that&#x27;s the big problem Jay is facing, and he should sound more like Rihanna to cater to my taste.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837448'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="280"></td><td valign="top" class="votelinks"><center><a id='up_7837448' href='vote?id=7837448&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=pcwalton" class="hnuser">pcwalton</a> <span class="age"><a href="item?id=7837448">on June 3, 2014</a></span> <span id="unv_7837448"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837448)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&gt;  Are you honestly suggesting that Rust is stable at this point?<p>No, he didn&#x27;t say that anywhere.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837374'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7837374' href='vote?id=7837374&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Pacabel" class="hnuser">Pacabel</a> <span class="age"><a href="item?id=7837374">on June 3, 2014</a></span> <span id="unv_7837374"></span><span class="par"></span> <a class="togg" n="6" href="javascript:void(0)" onclick="return toggle(event, 7837374)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I think you may be aiming for a level of safety, or perhaps a notion of &quot;perfection&quot;, that isn&#x27;t practically obtainable.<p>The recent, and rather disruptive, box changes are a good example of this. We see change, and those of us with existing Rust code sure do feel the change, but very little convergence seems to be happening.<p>Based on past trends, I would not be at all surprised if problems are found with the new approach as it becomes more widely used, and some other approach is then attempted.<p>Wheel-spinning is something that can quite easily happen with ambitious software projects. It&#x27;s not a new phenomenon. But when facing ever-increasing competition, and other real-world constraints, it&#x27;s often better to aim slightly lower and at least be mostly usable in practice.<p>A memory-safe programming language that can&#x27;t actually be used is pretty much irrelevant. It&#x27;s better to accept some slight amount of imperfection if that means it can actually be used.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837413'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="240"></td><td valign="top" class="votelinks"><center><a id='up_7837413' href='vote?id=7837413&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=pcwalton" class="hnuser">pcwalton</a> <span class="age"><a href="item?id=7837413">on June 3, 2014</a></span> <span id="unv_7837413"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837413)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&gt; I think you may be aiming for a level of safety, or perhaps a notion of &quot;perfection&quot;, that isn&#x27;t practically obtainable.<p>I believe it is, as the basic structure and rules of the borrow check (which is the part of Rust that&#x27;s truly unique) have proven themselves to be quite usable. The usability problems remaining are implementation and precision (e.g. issue #6393), not big problems that will require large redesigns.<p>&gt; The recent, and rather disruptive, box changes are a good example of this. We see change, and those of us with existing Rust code sure do feel the change, but very little convergence seems to be happening.<p>Yes, it is. The number of outstanding backwards incompatible language changes is decreasing. People who do Rust upgrades notice how the language is changing less and less.<p>&gt; A memory-safe programming language that can&#x27;t actually be used is pretty much irrelevant. It&#x27;s better to accept some slight amount of imperfection if that means it can actually be used.<p>&quot;Some slight amount of imperfection&quot; means <i>not memory-safe</i>. Java didn&#x27;t settle for that, C# didn&#x27;t settle for that, Swift isn&#x27;t settling for that, and we aren&#x27;t settling for it.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7837574'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="240"></td><td valign="top" class="votelinks"><center><a id='up_7837574' href='vote?id=7837574&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=girvo" class="hnuser">girvo</a> <span class="age"><a href="item?id=7837574">on June 3, 2014</a></span> <span id="unv_7837574"></span><span class="par"></span> <a class="togg" n="4" href="javascript:void(0)" onclick="return toggle(event, 7837574)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">This is an honest question: Why do you seem to care so much? Rust is in my view a great project, that yes isn&#x27;t quite there yet but is making great progress. I&#x27;m looking forward to using it when it is stable, and pcwalton and the other contributors are developers that I&#x27;ve looked up to for a number of years: I have nothing but faith in them.<p>At the end of the day, if Rust fails, well that will be a shame. But I&#x27;m seeing nothing that shows that it might, so I&#x27;m truly struggling to understand why you seem so upset by a new modern language trying to tackle big problems in ways that have never been done before. That&#x27;s a <i>good thing</i>, as far as I&#x27;m concerned.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837616'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="280"></td><td valign="top" class="votelinks"><center><a id='up_7837616' href='vote?id=7837616&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Pacabel" class="hnuser">Pacabel</a> <span class="age"><a href="item?id=7837616">on June 3, 2014</a></span> <span id="unv_7837616"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7837616)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Having been in industry for a long time, I think that something like Rust would be hugely beneficial. It very well could solve some very real problems.<p>I bring this up again and again because I&#x27;d rather not see Rust fail. I&#x27;d much rather see a slightly flawed Rust that&#x27;s actually usable in the short term, rather than a continually changing Rust that nobody will seriously adopt.<p>Rust has been in development for years now. That&#x27;s a very long time in the software industry. A few years of development time without a stable release is understandable. But it&#x27;s getting beyond that now.<p>Rust isn&#x27;t quite there yet, but each day it edges closer to a Perl 6 type of disaster. Perl 6 offered some intriguing ideas, but it just isn&#x27;t usable, and that&#x27;s a shame. Meanwhile, other competitors have arisen and blown past it, rendering it far less useful were it ever properly implemented.<p>Given the increasingly stiff competition that Rust is facing, I suspect we&#x27;ll see it end up like Haskell or D. Something usable is eventually produced, but it never sees the truly widespread adoption that it could have seen, had it been usable earlier on. It&#x27;s not as bad as Perl 6&#x27;s situation, but it is still unfortunate.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838142'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="320"></td><td valign="top" class="votelinks"><center><a id='up_7838142' href='vote?id=7838142&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=nnethercote" class="hnuser">nnethercote</a> <span class="age"><a href="item?id=7838142">on June 3, 2014</a></span> <span id="unv_7838142"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838142)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&gt; Given the increasingly stiff competition that Rust is facing, I suspect we&#x27;ll see it end up like Haskell or D. Something usable is eventually produced, but it never sees the truly widespread adoption that it could have seen, had it been usable earlier on.<p>I don&#x27;t have much to say about D, but the history of Haskell implied by this sentence is hilariously wrong.<p>Go watch Simon Peyton Jones&#x27; talk about the history of Haskell: <a href="http://research.microsoft.com/en-us/um/people/simonpj/papers/history-of-haskell/index.htm" rel="nofollow">http:&#x2F;&#x2F;research.microsoft.com&#x2F;en-us&#x2F;um&#x2F;people&#x2F;simonpj&#x2F;papers...</a>. As well as being wonderfully entertaining, it explains the actual history of Haskell: it was designed to be a language with which various academic groups could do functional programming language research. The fact that Haskell has gradually grown more popular and now has mainstream appeal and some industrial users is quite a surprise to its creators.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7838270'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="320"></td><td valign="top" class="votelinks"><center><a id='up_7838270' href='vote?id=7838270&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=TheHydroImpulse" class="hnuser">TheHydroImpulse</a> <span class="age"><a href="item?id=7838270">on June 3, 2014</a></span> <span id="unv_7838270"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838270)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&gt; Rust has been in development for years now. That&#x27;s a very long time in the software industry. A few years of development time without a stable release is understandable. But it&#x27;s getting beyond that now.<p>Not for programming languages. These take <i>years</i> and <i>years</i>. Take a stab at any of the most popular languages. They weren&#x27;t created 1-3 years ago. It takes time, and that&#x27;s a <i>good</i> thing.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
          <tr class='athing comtr ' id='7849720'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7849720' href='vote?id=7849720&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=taharvey" class="hnuser">taharvey</a> <span class="age"><a href="item?id=7849720">on June 5, 2014</a></span> <span id="unv_7849720"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7849720)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">reference counting != garbage collection. Garbage collection take CPU and lots of memory. Reference counting just ++ the pointer count on allocation, and -- on free. Essentially no overhead.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7837047'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7837047' href='vote?id=7837047&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=stormbrew" class="hnuser">stormbrew</a> <span class="age"><a href="item?id=7837047">on June 2, 2014</a></span> <span id="unv_7837047"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7837047)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">C++ moving to a 3 year standard cycle is a much bigger &#x27;threat&#x27; to rust. But really, the fact that there&#x27;s so much actual investment in improving mainstream languages from various well-funded sources is probably a rising-tide-lifts-all-boats kind of thing.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837119'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7837119' href='vote?id=7837119&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Pacabel" class="hnuser">Pacabel</a> <span class="age"><a href="item?id=7837119">on June 2, 2014</a></span> <span id="unv_7837119"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7837119)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c88">Yes, I do agree that the situation is improving across the board.<p>But as an industry, we need practical solutions that are available now, even if somewhat flawed. We need languages we can use today, and know that the code we write today will still compile fine next week and next year, if not a decade or more from now.<p>Modern C++ is getting pretty good at offering this, while offering far a greater degree of safety. Go isn&#x27;t bad, either. Scala has its drawbacks, but it&#x27;s often a reasonable option, too. The key thing to remember is that all of these languages have offered developers a stable target, and they are seriously usable in the present.<p>Given the announcement of Swift, and given that Apple will very likely deliver on it by the fall, we very well could see it becoming a major player during 2015.<p>The safety benefits that Rust could theoretically or potentially offer are virtually useless to huge swaths of the industry as long as the predictability of a stable release just isn&#x27;t there. The longer this wait goes on, the better the competition becomes, and the less relevant Rust will unfortunately become in the long term.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837349'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="240"></td><td valign="top" class="votelinks"><center><a id='up_7837349' href='vote?id=7837349&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=pcwalton" class="hnuser">pcwalton</a> <span class="age"><a href="item?id=7837349">on June 3, 2014</a></span> <span id="unv_7837349"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837349)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&gt; But as an industry, we need practical solutions that are available now, even if somewhat flawed. We need languages we can use today, and know that the code we write today will still compile fine next week and next year, if not a decade or more from now.<p>By this logic we shouldn&#x27;t invent any new programming languages at all. There&#x27;s no such thing as a &quot;practical solution that&#x27;s available now&quot;; everything takes time to develop.<p>&gt; Modern C++ is getting pretty good at offering this, while offering far a greater degree of safety. Go isn&#x27;t bad, either. Scala has its drawbacks, but it&#x27;s often a reasonable option, too. The key thing to remember is that all of these languages have offered developers a stable target, and they are seriously usable in the present.<p>You aren&#x27;t going to use those languages if you want memory safety without garbage collection. Because they can&#x27;t offer zero-overhead memory safety without breaking existing code.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
              <tr class='athing comtr ' id='7835948'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7835948' href='vote?id=7835948&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=DanielRibeiro" class="hnuser">DanielRibeiro</a> <span class="age"><a href="item?id=7835948">on June 2, 2014</a></span> <span id="unv_7835948"></span><span class="par"></span> <a class="togg" n="5" href="javascript:void(0)" onclick="return toggle(event, 7835948)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Swift&#x27;s environment is also very similar to Elm&#x27;s time travel debugger: <a href="http://debug.elm-lang.org/" rel="nofollow">http:&#x2F;&#x2F;debug.elm-lang.org&#x2F;</a><p>Direct link to Elm&#x27;s demo similar to Bret Victor&#x27;s:
<a href="http://debug.elm-lang.org/edit/Mario.elm" rel="nofollow">http:&#x2F;&#x2F;debug.elm-lang.org&#x2F;edit&#x2F;Mario.elm</a> (video: <a href="https://www.youtube.com/watch?v=RUeLd7T7Xi4" rel="nofollow">https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=RUeLd7T7Xi4</a>)</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836241'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7836241' href='vote?id=7836241&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=AlexanderDhoore" class="hnuser">AlexanderDhoore</a> <span class="age"><a href="item?id=7836241">on June 2, 2014</a></span> <span id="unv_7836241"></span><span class="par"></span> <a class="togg" n="4" href="javascript:void(0)" onclick="return toggle(event, 7836241)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I immediately thought about that as well. I wonder how they pull it off? Swift is not a functional language, so they just save every single variable, or what?</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836310'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7836310' href='vote?id=7836310&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=seanmcdirmid" class="hnuser">seanmcdirmid</a> <span class="age"><a href="item?id=7836310">on June 2, 2014</a></span> <span id="unv_7836310"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7836310)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Time travel debugging has existed for a long time, and it&#x27;s not limited to functional languages; the most obvious way they could do this is through checkpointing.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836610'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7836610' href='vote?id=7836610&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=cwp" class="hnuser">cwp</a> <span class="age"><a href="item?id=7836610">on June 2, 2014</a></span> <span id="unv_7836610"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836610)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Checkpointing is a natural fit with the Cocoa API, which uses an event loop. Just save the state of the application after each event is handled.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7846992'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7846992' href='vote?id=7846992&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=gtrak" class="hnuser">gtrak</a> <span class="age"><a href="item?id=7846992">on June 4, 2014</a></span> <span id="unv_7846992"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7846992)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Just a hunch, LLVM uses Static-Single-Assignment, which is just that, saving every single variable change.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7835271'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7835271' href='vote?id=7835271&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=seanalltogether" class="hnuser">seanalltogether</a> <span class="age"><a href="item?id=7835271">on June 2, 2014</a></span> <span id="unv_7835271"></span><span class="par"></span> <a class="togg" n="8" href="javascript:void(0)" onclick="return toggle(event, 7835271)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">He mentioned the desire to drop the &quot;C&quot; from objective-c, but I&#x27;m curious what this means for using c&#x2F;c++ libraries now. Do they need to be wrapped by objective-c before being visible in swift?</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836009'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7836009' href='vote?id=7836009&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=quonn" class="hnuser">quonn</a> <span class="age"><a href="item?id=7836009">on June 2, 2014</a></span> <span id="unv_7836009"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7836009)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Swift uses a special &quot;bridging header&quot; to expose Objective-C code to Swift. This header will presumably be processed by the Swift compiler.<p>In the other direction, XCode will automatically generate an Objective-C header to expose your Swift code to Objective-C.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836039'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7836039' href='vote?id=7836039&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=outworlder" class="hnuser">outworlder</a> <span class="age"><a href="item?id=7836039">on June 2, 2014</a></span> <span id="unv_7836039"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7836039)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">The ibooks guide references a &quot;Using Swift with Cocoa and Objective-C&quot; document. Is that where you got your information?</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837461'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7837461' href='vote?id=7837461&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=eevilspock" class="hnuser">eevilspock</a> <span class="age"><a href="item?id=7837461">on June 3, 2014</a></span> <span id="unv_7837461"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837461)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00"><a href="https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/BuildingCocoaApps/index.html" rel="nofollow">https:&#x2F;&#x2F;developer.apple.com&#x2F;library&#x2F;prerelease&#x2F;ios&#x2F;documenta...</a><p>For discussion: <a href="https://news.ycombinator.com/item?id=7837468" rel="nofollow">https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=7837468</a></span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7835317'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7835317' href='vote?id=7835317&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=FreezerburnV" class="hnuser">FreezerburnV</a> <span class="age"><a href="item?id=7835317">on June 2, 2014</a></span> <span id="unv_7835317"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7835317)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">It seemed like it could interoperate with C just fine based on the slide talking about all three. Also because it uses the Objective-C runtime and compiles to native, it might just see C functions as normal functions. Though what little I&#x27;ve looked at the free book hasn&#x27;t given me any hints about that yet.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7836372'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7836372' href='vote?id=7836372&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=sv3nss0n" class="hnuser">sv3nss0n</a> <span class="age"><a href="item?id=7836372">on June 2, 2014</a></span> <span id="unv_7836372"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836372)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&quot;You cannot import C++ code directly into Swift. Instead, create an Objective-C or C wrapper for C++ code.&quot;</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7835572'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7835572' href='vote?id=7835572&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Udo" class="hnuser">Udo</a> <span class="age"><a href="item?id=7835572">on June 2, 2014</a></span> <span id="unv_7835572"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7835572)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I suspect that as long as it compiles to LLVM, anything goes.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7838498'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7838498' href='vote?id=7838498&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=pjmlp" class="hnuser">pjmlp</a> <span class="age"><a href="item?id=7838498">on June 3, 2014</a></span> <span id="unv_7838498"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838498)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I hope so. Another stab on C&#x27;s back.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7836794'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7836794' href='vote?id=7836794&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=josephjrobison" class="hnuser">josephjrobison</a> <span class="age"><a href="item?id=7836794">on June 2, 2014</a></span> <span id="unv_7836794"></span><span class="par"></span> <a class="togg" n="10" href="javascript:void(0)" onclick="return toggle(event, 7836794)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Is it realistic to try to dive right in to the 500-page book they provided without a computer science background, just HTML&#x2F;CSS&#x2F;PHP self-taught experience, to learn the language? Or should I take other steps first?</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836840'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7836840' href='vote?id=7836840&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=krenoten" class="hnuser">krenoten</a> <span class="age"><a href="item?id=7836840">on June 2, 2014</a></span> <span id="unv_7836840"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836840)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Reading a book cover-to-cover is, for me, a bad way to learn a language.  I usually pick things up very quickly when I try to implement things using them that I am both familiar with and faced with annoying issues stemming to the language they are currently implemented in.  If you don&#x27;t have one of those, think about something you hate, and fix it with this.<p>If the book is good documentation, then use it.  But you may benefit from focusing more on problems than completing a book.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7836890'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7836890' href='vote?id=7836890&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=lugg" class="hnuser">lugg</a> <span class="age"><a href="item?id=7836890">on June 2, 2014</a></span> <span id="unv_7836890"></span><span class="par"></span> <a class="togg" n="4" href="javascript:void(0)" onclick="return toggle(event, 7836890)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Just read the first paragraph and conclusions if the have them, of each chapter. This will give you a good idea of what&#x27;s there when you need it. Then I&#x27;d jump straight into tutorials.<p>Honestly skimming 500 doesn&#x27;t sound horribly hard to me. I&#x27;ve done that a few times to pick up something new. As ap said you won&#x27;t learn the language like that but you will have a good reference to go and learn from after the fact.<p>After that you could probably work through the examples in said book, or at least the interesting ones.<p>P.S. above steps is all I <i>really</i> learnt from my cs degree.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837008'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7837008' href='vote?id=7837008&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=cnp" class="hnuser">cnp</a> <span class="age"><a href="item?id=7837008">on June 2, 2014</a></span> <span id="unv_7837008"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837008)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Skimming through it has been great.  It&#x27;s quite well-written and you&#x27;ll get a lot of the concepts that the lang introduces even if the extent of your programming education is JS.  Give it a try :)</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7836995'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7836995' href='vote?id=7836995&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=josephjrobison" class="hnuser">josephjrobison</a> <span class="age"><a href="item?id=7836995">on June 2, 2014</a></span> <span id="unv_7836995"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7836995)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">And is this the exact same language - <a href="http://www.cs.cornell.edu/jif/swift/doc/index.html" rel="nofollow">http:&#x2F;&#x2F;www.cs.cornell.edu&#x2F;jif&#x2F;swift&#x2F;doc&#x2F;index.html</a></span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837268'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7837268' href='vote?id=7837268&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=cschmidt" class="hnuser">cschmidt</a> <span class="age"><a href="item?id=7837268">on June 2, 2014</a></span> <span id="unv_7837268"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837268)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">No, it is completely unrelated. That is the other language called Swift.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837063'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7837063' href='vote?id=7837063&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=stormbrew" class="hnuser">stormbrew</a> <span class="age"><a href="item?id=7837063">on June 2, 2014</a></span> <span id="unv_7837063"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837063)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">The copy I have is only 366 pages, but it&#x27;s &#x27;converted&#x27; from the ebook so I&#x27;m not sure if that&#x27;s a factor. A lot of the pages are dedicated to an examination of the grammar that&#x27;s probably not relevant for a language overview and the rest is really readable and easily skimmed for interesting details. It&#x27;s broken up with simple and clear examples every few paragraphs as well.<p>Definitely take a look through it. You definitely don&#x27;t need to be a language nerd to understand it.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7837290'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7837290' href='vote?id=7837290&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=golergka" class="hnuser">golergka</a> <span class="age"><a href="item?id=7837290">on June 2, 2014</a></span> <span id="unv_7837290"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7837290)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I&#x27;m 20% in, and you certainly should give it a try. It&#x27;s very well-written, explains basic concepts really well, and has a lot of examples. It also has a good flow from the basc features to more advanced ones.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838115'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7838115' href='vote?id=7838115&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=josephjrobison" class="hnuser">josephjrobison</a> <span class="age"><a href="item?id=7838115">on June 3, 2014</a></span> <span id="unv_7838115"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838115)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Great, thanks - will give it a shot!</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7838892'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7838892' href='vote?id=7838892&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=hrktb" class="hnuser">hrktb</a> <span class="age"><a href="item?id=7838892">on June 3, 2014</a></span> <span id="unv_7838892"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838892)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I think it&#x27;s a good idea only if you execute code in parallel,  following all the examples. Otherwise there&#x27;s a lot of notions than already exist in Objective C that are glossed over and would be pitfalls for people new to the runtime.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7837108'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7837108' href='vote?id=7837108&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=CCs" class="hnuser">CCs</a> <span class="age"><a href="item?id=7837108">on June 2, 2014</a></span> <span id="unv_7837108"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7837108)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I think everybody can see their own favorite language in it... and that&#x27;s a good thing.<p>For me it looks like Scala + a sprinkle of C++14 :)</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7847431'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7847431' href='vote?id=7847431&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=CCs" class="hnuser">CCs</a> <span class="age"><a href="item?id=7847431">on June 4, 2014</a></span> <span id="unv_7847431"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7847431)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">There are others too with &quot;looks like Scala&quot;:<p>Jacob Leverich <a href="https://leverich.github.io/swiftislikescala/" rel="nofollow">https:&#x2F;&#x2F;leverich.github.io&#x2F;swiftislikescala&#x2F;</a><p>Den Shabalin <a href="http://www.scribd.com/doc/227879724/Swift-vs-Scala-2-11" rel="nofollow">http:&#x2F;&#x2F;www.scribd.com&#x2F;doc&#x2F;227879724&#x2F;Swift-vs-Scala-2-11</a></span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7838830'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7838830' href='vote?id=7838830&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=anilmujagic" class="hnuser">anilmujagic</a> <span class="age"><a href="item?id=7838830">on June 3, 2014</a></span> <span id="unv_7838830"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838830)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Indeed, I also think it&#x27;s most similar to Scala.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7836936'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7836936' href='vote?id=7836936&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=curveship" class="hnuser">curveship</a> <span class="age"><a href="item?id=7836936">on June 2, 2014</a></span> <span id="unv_7836936"></span><span class="par"></span> <a class="togg" n="17" href="javascript:void(0)" onclick="return toggle(event, 7836936)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&gt; It has the concept of explicitly capturing variables from the surrounding context inside closures, like PHP does, instead of keeping the entire context alive forever like Ruby or JS.<p>Just as a point of fact, javascript -- at least the v8 implementation I&#x27;m most knowledgeable of -- doesn&#x27;t &quot;keep the entire context alive forever.&quot;  Only variables used in the closure are allocated into the closure (i.e. on the heap), the others are allocated on the stack and disappear as soon as the function returns.<p>I don&#x27;t use iTunes so can&#x27;t read their book, but I wanted to ask: you say that ARC is still their GC strategy, correct?  So reference cycles are still an issue?  I&#x27;m surprised at this.  I can see reference counting being a strategy for moving a non-GC&#x27;d language to GC (like Objective-C), but to start a new language with that constraint is surprising.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837053'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7837053' href='vote?id=7837053&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Udo" class="hnuser">Udo</a> <span class="age"><a href="item?id=7837053">on June 2, 2014</a></span> <span id="unv_7837053"></span><span class="par"></span> <a class="togg" n="10" href="javascript:void(0)" onclick="return toggle(event, 7837053)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00"><i>&gt; Only variables used in the closure are allocated into the closure</i><p>I&#x27;m not sure that&#x27;s true. Look at the following code:<p><pre><code>  var x = 123;

  var f = function(xname) {
    eval(&#x27;console.log(&#x27;+xname+&#x27;);&#x27;);
  }

  f(&#x27;x&#x27;);
</code></pre>
It&#x27;s a dynamically named variable. Clearly, f() has access to the entire context that surrounds it, not just the objects explicitly used in the function code. In this example, the compiler could not possibly have known I was going to access x.<p>This means in Javascript, as well as in Ruby, when you hand a closure to my code, I can access the entire environment of that closure.<p>Contrast that with Lua, for example, where the compiler does indeed check whether an outer variable is being used and then it imports that variable from the context only.<p>PHP does it most explicitly, forcing the developer to declare what outer objects they want to have available within the function.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837241'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7837241' href='vote?id=7837241&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=curveship" class="hnuser">curveship</a> <span class="age"><a href="item?id=7837241">on June 2, 2014</a></span> <span id="unv_7837241"></span><span class="par"></span> <a class="togg" n="7" href="javascript:void(0)" onclick="return toggle(event, 7837241)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&gt; In this example, the compiler could not possibly have known I was going to access x.<p>Right, but it knew you were going to use eval, and to support that, it had to allocate all local variables in the closure.  That&#x27;s why you saw this behavior.  The same would happen if you used a &#x27;with&#x27; construct.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837265'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7837265' href='vote?id=7837265&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Udo" class="hnuser">Udo</a> <span class="age"><a href="item?id=7837265">on June 2, 2014</a></span> <span id="unv_7837265"></span><span class="par"></span> <a class="togg" n="6" href="javascript:void(0)" onclick="return toggle(event, 7837265)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00"><i>&gt; Right, but it knew you were going to use eval, and to support that, it had to allocate all local variables in the closure.</i><p>Wow, so there is actually special handling in the engine for this? So it does static analysis whenever it can, but not in these two cases?</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837307'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7837307' href='vote?id=7837307&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=curveship" class="hnuser">curveship</a> <span class="age"><a href="item?id=7837307">on June 2, 2014</a></span> <span id="unv_7837307"></span><span class="par"></span> <a class="togg" n="4" href="javascript:void(0)" onclick="return toggle(event, 7837307)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Yes, the V8 compiler bails out of several optimizations if your function uses eval.  You can see this in the profiler: functions which V8 wasn&#x27;t able to optimize will have an alert sign next to them, and if you click it, it&#x27;ll tell you what the issue was.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837460'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="240"></td><td valign="top" class="votelinks"><center><a id='up_7837460' href='vote?id=7837460&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=anonymoushn" class="hnuser">anonymoushn</a> <span class="age"><a href="item?id=7837460">on June 3, 2014</a></span> <span id="unv_7837460"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7837460)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">This is a bit troublesome!<p><pre><code>  function f() {var x = 99; return function(a,b) {return a(b)};}
  f()(eval, &#x27;console.log(x);&#x27;)
  ReferenceError: x is not defined
  function f() {var x = 99; return function(a,b) {return eval(b)};}
  f()(eval, &#x27;console.log(x);&#x27;)
  99
  undefined</code></pre></span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837511'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="280"></td><td valign="top" class="votelinks"><center><a id='up_7837511' href='vote?id=7837511&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=curveship" class="hnuser">curveship</a> <span class="age"><a href="item?id=7837511">on June 3, 2014</a></span> <span id="unv_7837511"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837511)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Yep, this is as per spec: <a href="http://www.ecma-international.org/ecma-262/5.1/#sec-10.4.2" rel="nofollow">http:&#x2F;&#x2F;www.ecma-international.org&#x2F;ecma-262&#x2F;5.1&#x2F;#sec-10.4.2</a> .  &quot;Indirect&quot; calls to eval (i.e. assigning eval to another variable, like you did by passing it as a param) are evaluated in terms of the global environment.  &quot;Direct&quot; calls, like in your second example, use the local environment.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7837319'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="240"></td><td valign="top" class="votelinks"><center><a id='up_7837319' href='vote?id=7837319&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Udo" class="hnuser">Udo</a> <span class="age"><a href="item?id=7837319">on June 3, 2014</a></span> <span id="unv_7837319"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837319)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Very cool, thanks for clearing that up!</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7837542'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7837542' href='vote?id=7837542&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=coldtea" class="hnuser">coldtea</a> <span class="age"><a href="item?id=7837542">on June 3, 2014</a></span> <span id="unv_7837542"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837542)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Yes, and in articles describing it (v8), they explicitly warn you to not use &quot;eval&quot; or &quot;with&quot; for the performance impact.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837103'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7837103' href='vote?id=7837103&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Sheepshow" class="hnuser">Sheepshow</a> <span class="age"><a href="item?id=7837103">on June 2, 2014</a></span> <span id="unv_7837103"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7837103)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">In your example, X is still in scope when f(&#x27;x&#x27;) is called. It doesn&#x27;t require closure to work.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837204'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7837204' href='vote?id=7837204&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Udo" class="hnuser">Udo</a> <span class="age"><a href="item?id=7837204">on June 2, 2014</a></span> <span id="unv_7837204"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837204)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I think you misunderstand what I&#x27;m trying to say. The point is <i>not</i> that x should be out of scope (why would it be?)<p>The original assertion by <i>curveship</i> was that the outer context is <i>not</i> kept alive for the function, and that f() only gets access to the variables it explicitly imports from the outer context. And I thought this might be wrong, so I cooked up the example.<p>Again, this is not about scope. This is about the fact that the function itself keeps a reference to the entire context it was created in, as opposed to just the things it explicitly imports.<p>In this, it appears, Javascript works exactly as Ruby, which again makes the entire outer context available through the <i>binding</i> facility.<p>I&#x27;m sorry if that wasn&#x27;t clear from my description.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837062'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7837062' href='vote?id=7837062&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=pjmlp" class="hnuser">pjmlp</a> <span class="age"><a href="item?id=7837062">on June 2, 2014</a></span> <span id="unv_7837062"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7837062)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Swift reuses the Objective-C runtime, so it had to be compatible in terms of memory management.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837388'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7837388' href='vote?id=7837388&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=curveship" class="hnuser">curveship</a> <span class="age"><a href="item?id=7837388">on June 3, 2014</a></span> <span id="unv_7837388"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837388)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">OK, thanks.  I guess that makes sense.  Now that the website is working, I see that they&#x27;re aiming at fairly seamless interop between Swift and Objective-C, so I guess they need a similar memory strategy.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7837239'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7837239' href='vote?id=7837239&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=kevingadd" class="hnuser">kevingadd</a> <span class="age"><a href="item?id=7837239">on June 2, 2014</a></span> <span id="unv_7837239"></span><span class="par"></span> <a class="togg" n="4" href="javascript:void(0)" onclick="return toggle(event, 7837239)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">This is not accurate. SpiderMonkey and V8 still retain the entire outer scope if any of the variables are used.<p>See here for an example:
<a href="https://www.meteor.com/blog/2013/08/13/an-interesting-kind-of-javascript-memory-leak" rel="nofollow">https:&#x2F;&#x2F;www.meteor.com&#x2F;blog&#x2F;2013&#x2F;08&#x2F;13&#x2F;an-interesting-kind-o...</a><p>This bug is still not fixed. There&#x27;s an issue open for it on the V8 tracker, I believe. It seems to have not gotten fixed in either engine because it&#x27;s a difficult problem that affects a small subset of JS applications.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837369'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7837369' href='vote?id=7837369&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=curveship" class="hnuser">curveship</a> <span class="age"><a href="item?id=7837369">on June 3, 2014</a></span> <span id="unv_7837369"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7837369)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">So go ahead and run his test.  Things have changed :).  Memory builds up 1mb&#x2F;second, then after a few seconds, you&#x27;ll see it drop back to zero, as the GC runs.<p>V8 has seen a lot of really nice optimizations to closures over the last year.  My favorite is that closures are no longer considered megamorphic.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837473'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7837473' href='vote?id=7837473&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=kevingadd" class="hnuser">kevingadd</a> <span class="age"><a href="item?id=7837473">on June 3, 2014</a></span> <span id="unv_7837473"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7837473)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Oh wow, when did that land? I was getting hit by that leak with JSIL in the last couple months. Can you link to the commit?</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837564'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7837564' href='vote?id=7837564&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=curveship" class="hnuser">curveship</a> <span class="age"><a href="item?id=7837564">on June 3, 2014</a></span> <span id="unv_7837564"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837564)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Not sure the date.  I first noticed the change back in April, when I was profiling some code.  Ask vegorov: <a href="http://mrale.ph/blog/2012/09/23/grokking-v8-closures-for-fun.html" rel="nofollow">http:&#x2F;&#x2F;mrale.ph&#x2F;blog&#x2F;2012&#x2F;09&#x2F;23&#x2F;grokking-v8-closures-for-fun...</a> .</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
            <tr class='athing comtr ' id='7837951'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7837951' href='vote?id=7837951&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=krsna" class="hnuser">krsna</a> <span class="age"><a href="item?id=7837951">on June 3, 2014</a></span> <span id="unv_7837951"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837951)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I agree that Swift looks quite promising, though I&#x27;m a bit surprised that it doesn&#x27;t offer any concurrency primitives like Go does. I only say this because &quot;The Swift Programming Language&quot; e-book claims that &quot;it’s designed to scale from &#x27;hello, world&#x27; to an entire operating system.&quot;</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
                <tr class='athing comtr ' id='7835243'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="0"></td><td valign="top" class="votelinks"><center><a id='up_7835243' href='vote?id=7835243&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=nlh" class="hnuser">nlh</a> <span class="age"><a href="item?id=7835243">on June 2, 2014</a></span> <span id="unv_7835243"></span><span class="par"></span> <a class="togg" n="75" href="javascript:void(0)" onclick="return toggle(event, 7835243)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I&#x27;m not even an iOS developer but this is by far the most exciting thing I heard in the keynote.<p>As an amatuer&#x2F;hobbyist programmer who&#x27;s self-taught with Ruby, JavaScript, etc., the one thing that was keeping me from experimenting with iOS apps was Objective-C.  I know I could tackle it, but it&#x27;s been hard to take the plunge.<p>I don&#x27;t know much about Swift yet, but from what I&#x27;ve seen it looks very exciting.  So if Apple&#x27;s goal was to get new devs into the iOS world, at least from 10k feet, it&#x27;s working.<p>I&#x27;m excited!</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7835959'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7835959' href='vote?id=7835959&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=angersock" class="hnuser">angersock</a> <span class="age"><a href="item?id=7835959">on June 2, 2014</a></span> <span id="unv_7835959"></span><span class="par"></span> <a class="togg" n="15" href="javascript:void(0)" onclick="return toggle(event, 7835959)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I&#x27;m not really that impressed--it looks like a hodgepodge of ideas from ES6, Ruby, Go, and maybe Rust, with a bit of backend work done to let it work on their existing infrastructure.<p>I dislike that Apple has continued the special snowflake approach, that for some reason we as developers need to learn yet another different-but-almost-the-same language to develop for them, instead of just adding proper support and documentation for an existing language. Why not just let us use ES6, or normal C&#x2F;C++, or Java?<p>But instead, now there&#x27;s yet another language without great innovation that is probably going to be badly supported outside of the Apple ecosystem but still will have enough fandom to keep it alive and make life annoying.<p>At least Google had the decency to pick a language everybody was already using and use that.<p>EDIT:<p>I feel bad for all the engineers stuck in those pixel mines, not allowed to talk about what they&#x27;re doing, doomed to reinvent things that are on the way out just as they come in.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837259'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7837259' href='vote?id=7837259&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=jernfrost" class="hnuser">jernfrost</a> <span class="age"><a href="item?id=7837259">on June 2, 2014</a></span> <span id="unv_7837259"></span><span class="par"></span> <a class="togg" n="7" href="javascript:void(0)" onclick="return toggle(event, 7837259)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">There is already MacRuby and RubyMotion. They tried using Java years ago. It failed. Developers didn&#x27;t like it. Existing stuff simply doesn&#x27;t mix that well with Cocoa and that style of programming. That is why something like Swift was needed.<p>I really don&#x27;t get why you can bring up languages such as Rust and Go, and complain about Apple&#x27;s special snowflake approach. Suddenly Apple is doing something developers have been demanding from them for years and something lots of other companies like Google, Mozila and Microsoft has already done. But oh no, because it is Apple, it is all wrong.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837365'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7837365' href='vote?id=7837365&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=dbaupp" class="hnuser">dbaupp</a> <span class="age"><a href="item?id=7837365">on June 3, 2014</a></span> <span id="unv_7837365"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837365)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">It&#x27;s unfair to lump Mozilla in with the rest, since Rust isn&#x27;t at all propriety. It has been open source for a long long time: <a href="https://github.com/mozilla/rust" rel="nofollow">https:&#x2F;&#x2F;github.com&#x2F;mozilla&#x2F;rust</a></span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7838510'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7838510' href='vote?id=7838510&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=pjmlp" class="hnuser">pjmlp</a> <span class="age"><a href="item?id=7838510">on June 3, 2014</a></span> <span id="unv_7838510"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838510)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">That is not quite right.<p>The Java&#x2F;Objective-C bridge existed in the early days as they weren&#x27;t sure if developers would pick Objective-C, so they decided to bet on two horses.<p>As Objective-C eventually won the hearts of Mac OS X developers, the bridge was deprecated and a few years later the full Java support.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7838014'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7838014' href='vote?id=7838014&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=angersock" class="hnuser">angersock</a> <span class="age"><a href="item?id=7838014">on June 3, 2014</a></span> <span id="unv_7838014"></span><span class="par"></span> <a class="togg" n="4" href="javascript:void(0)" onclick="return toggle(event, 7838014)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c5a"><i>Suddenly Apple is doing something developers have been demanding from them for years and something lots of other companies like Google, Mozila and Microsoft has already done.</i><p>And yet they&#x27;ve decided to do it again, with yet another incompatible language! Joy of joys!<p>(And as for Java, it was my understanding that Apple had hobbled it by refusing to release updates on a timely basis.)</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838536'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7838536' href='vote?id=7838536&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=toyg" class="hnuser">toyg</a> <span class="age"><a href="item?id=7838536">on June 3, 2014</a></span> <span id="unv_7838536"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838536)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00"><i>&gt; Apple had hobbled it by refusing to release updates on a timely basis.</i><p>I can see how they could get tired of being forced to ship <i>almost-monthly updates</i> just to support an extra language with very limited adoption. If you have to make that sort of effort, you&#x27;ll probably do it for your native tools only (like Microsoft does with .Net). Besides, Java apps on OSX looked better than Java apps on Windows, but they were still recognizably different from Obj-C ones.<p>I wish somebody would write an OS in Python 3...</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7844475'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7844475' href='vote?id=7844475&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=jonhendry" class="hnuser">jonhendry</a> <span class="age"><a href="item?id=7844475">on June 4, 2014</a></span> <span id="unv_7844475"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7844475)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&quot;(And as for Java, it was my understanding that Apple had hobbled it by refusing to release updates on a timely basis.)&quot;<p>That&#x27;s a different, later issue.<p>Early on in the life of OS X, Apple offered a Java interface to the Cocoa class frameworks. In theory, you could write OS X applications using Java, calling into the Apple frameworks instead of using Swing or whatever Java frameworks.<p>This wasn&#x27;t all that well supported, didn&#x27;t perform well, and wasn&#x27;t popular.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7839592'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7839592' href='vote?id=7839592&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=mgkimsal" class="hnuser">mgkimsal</a> <span class="age"><a href="item?id=7839592">on June 3, 2014</a></span> <span id="unv_7839592"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7839592)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Sun should simply have hired some mac people and done it themselves.  Entrusting the success of your entire company ( they changed their ticker symbol to JAVA!) to a 3rd party vendor&#x27;s whims was and is silly.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836087'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7836087' href='vote?id=7836087&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=jacobevelyn" class="hnuser">jacobevelyn</a> <span class="age"><a href="item?id=7836087">on June 2, 2014</a></span> <span id="unv_7836087"></span><span class="par"></span> <a class="togg" n="5" href="javascript:void(0)" onclick="return toggle(event, 7836087)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Agreed that the lack of using an existing (and open-source!) language is annoying and frustrating to deal with (think of where we&#x27;d be if they invested that time and effort into improving Ruby&#x2F;Python&#x2F;whatever instead!). But because of the desire for compatibility with Objective-C, and Apple&#x27;s general desire to call all the shots regarding their ecosystem, this move doesn&#x27;t surprise me in the least.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838548'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7838548' href='vote?id=7838548&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=emn13" class="hnuser">emn13</a> <span class="age"><a href="item?id=7838548">on June 3, 2014</a></span> <span id="unv_7838548"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838548)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">The fact that this has static typing is a huge difference to &quot;just improving&quot; ruby&#x2F;python.  That approach couldn&#x27;t come close to getting the same early-error-catching dev experience, and performance.  And amongst static languages, Apple wasn&#x27;t likely to recommend C++ as simple, were they?  And Rust&#x2F;D are also quite low level, nor do they have the Objective-C legacy to consider.  So really, you&#x27;re probably left with C# (or maybe Java), and those are so old and large (esp. the libraries) by now that they&#x27;re unlikely to naturally port to Apple&#x27;s environment.<p>Frankly, a bit of a clean up every decade or two is not exactly often, right?</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7836647'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7836647' href='vote?id=7836647&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=angersock" class="hnuser">angersock</a> <span class="age"><a href="item?id=7836647">on June 2, 2014</a></span> <span id="unv_7836647"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7836647)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c73">Apple consistently represents a step backwards for both developers and users, in terms of engineering and freedom, but they&#x27;ve amassed enough capital at this point that the hope of them simply withering on the vine and dying off is probably not going to happen.<p>At least Microsoft and Google show off their new projects and code so everyone can learn from them and read their research.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837412'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7837412' href='vote?id=7837412&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=ethyreal" class="hnuser">ethyreal</a> <span class="age"><a href="item?id=7837412">on June 3, 2014</a></span> <span id="unv_7837412"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7837412)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">any proof to back up those claims?</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837732'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7837732' href='vote?id=7837732&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=angersock" class="hnuser">angersock</a> <span class="age"><a href="item?id=7837732">on June 3, 2014</a></span> <span id="unv_7837732"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837732)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00"><a href="http://research.microsoft.com/en-us/" rel="nofollow">http:&#x2F;&#x2F;research.microsoft.com&#x2F;en-us&#x2F;</a><p><a href="http://research.google.com/" rel="nofollow">http:&#x2F;&#x2F;research.google.com&#x2F;</a><p><a href="http://research.apple.com/" rel="nofollow">http:&#x2F;&#x2F;research.apple.com&#x2F;</a><p>Hint: one of these things is not like the other...see if you can figure out which using only the power of curl.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
          <tr class='athing comtr ' id='7849938'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7849938' href='vote?id=7849938&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=taharvey" class="hnuser">taharvey</a> <span class="age"><a href="item?id=7849938">on June 5, 2014</a></span> <span id="unv_7849938"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7849938)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">What about the special snowflake projects of google, mozilla, or sun? Apples language development is no less valid than google developing Go, or mozilla developing rust. This just shows your inherent bias.<p>I&#x27;ve been amazed recently how many open-source projects that we rolled into our linux product were Apple sourced: LLVM, Clang, libdispatch, webkit, OpenCL, zeroConf. Can&#x27;t think of anything google has done for me recently.<p>And if there is anyone who will knock-this out of the park, its Chris Lattner. LLVM, Clang, and openCL is all him. He has done more for compiler tech than anyone in 30 years.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7851139'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7851139' href='vote?id=7851139&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=oldguysrule" class="hnuser">oldguysrule</a> <span class="age"><a href="item?id=7851139">on June 5, 2014</a></span> <span id="unv_7851139"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7851139)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&gt;At least Google had the decency to pick a language everybody was already using and use that.<p>If you think Java is remotely comparable in power and expressiveness to Objective C, you should probably reconsider your line of work.<p>The rise in popularity of Java nearly drove me from the industry it is such a verbose half baked pile of garbage.  I could fill your browser with things you can do in Objective C that you cannot do in Java at all and this incredible flexibility is why Apple is such an agile company with such limited head count.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7835516'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7835516' href='vote?id=7835516&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=te_chris" class="hnuser">te_chris</a> <span class="age"><a href="item?id=7835516">on June 2, 2014</a></span> <span id="unv_7835516"></span><span class="par"></span> <a class="togg" n="34" href="javascript:void(0)" onclick="return toggle(event, 7835516)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I don&#x27;t get the hate.  Yeah, syntax is unfamiliar, bu once I got used to it I began to really enjoy objective-c. Ymmv etc., but it&#x27;s now one of my fav languages - though I guess this is mostly due to cocoa</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7835981'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7835981' href='vote?id=7835981&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=whalesalad" class="hnuser">whalesalad</a> <span class="age"><a href="item?id=7835981">on June 2, 2014</a></span> <span id="unv_7835981"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7835981)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I also really like Obj-C now that I am familiar with it. I think the biggest pain point with iOS apps is understanding the way to build apps within the context of the iPhone (how to structure views, and the custom things like alert sheets, etc...) particularly if you are coming from a web app background. The syntax is quite nice (although sometimes verbose) once you get used to it.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7835851'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7835851' href='vote?id=7835851&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=ktran03" class="hnuser">ktran03</a> <span class="age"><a href="item?id=7835851">on June 2, 2014</a></span> <span id="unv_7835851"></span><span class="par"></span> <a class="togg" n="5" href="javascript:void(0)" onclick="return toggle(event, 7835851)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I never understood what the fuss was all about either.<p>If you know one other language really well, Objective-C should take a week or two to get use to.<p>To understand all the design patters, apple HIG, XCode, profiling, libraries, debugging, app submission, etc, these combined is where youll sink your time to learn iOS development. Imo, Objective-C is the easy part.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7835967'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7835967' href='vote?id=7835967&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=mox1" class="hnuser">mox1</a> <span class="age"><a href="item?id=7835967">on June 2, 2014</a></span> <span id="unv_7835967"></span><span class="par"></span> <a class="togg" n="4" href="javascript:void(0)" onclick="return toggle(event, 7835967)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I recently translated one of my Apps from Android to iPhone.<p>I had 0 objective-C experience, but I made it work. It was a bit of a frustrating experience. Many times I found myself writing Objective-C boilerplate-ish code that I had 0 clue what it was doing, considering this is a hobby &#x2F; for fun project I just wanted it working.<p>It&#x27;s not easy to google the answer to, &quot;Why did I just add this new keyword after this colon in this random .h file..&quot;<p>I didn&#x27;t want to spend the next month reading Objective-C for beginners, I know what a for loop is, I also know what constructors are. I just wanted to use the language.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836549'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7836549' href='vote?id=7836549&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=ff10" class="hnuser">ff10</a> <span class="age"><a href="item?id=7836549">on June 2, 2014</a></span> <span id="unv_7836549"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836549)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">You may know what a constructor is, but maybe not know what a designated initializer does. ;-)</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7837139'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7837139' href='vote?id=7837139&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=cesarbs" class="hnuser">cesarbs</a> <span class="age"><a href="item?id=7837139">on June 2, 2014</a></span> <span id="unv_7837139"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837139)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I felt the same when working on iOS. I felt I was writing way too much boilerplate code, while Android and Windows Phone just gave me a lot more &quot;for free&quot;.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7837893'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7837893' href='vote?id=7837893&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=BHSPitMonkey" class="hnuser">BHSPitMonkey</a> <span class="age"><a href="item?id=7837893">on June 3, 2014</a></span> <span id="unv_7837893"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837893)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">You&#x27;ve just described exactly what it feels like transitioning from iOS to Android development, too.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7835930'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7835930' href='vote?id=7835930&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Touche" class="hnuser">Touche</a> <span class="age"><a href="item?id=7835930">on June 2, 2014</a></span> <span id="unv_7835930"></span><span class="par"></span> <a class="togg" n="4" href="javascript:void(0)" onclick="return toggle(event, 7835930)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">You may not hate Objective-C, but I doubt you love it either. Have you &#x2F; would you ever use Objective-C to write a web back-end? To write a command-line tool?</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7850400'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7850400' href='vote?id=7850400&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=oldguysrule" class="hnuser">oldguysrule</a> <span class="age"><a href="item?id=7850400">on June 5, 2014</a></span> <span id="unv_7850400"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7850400)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I got started with WebObjects, a Next product a couple years before Apple bought them.  Yes I&#x27;ve written wonderfully powerful web applications in Objective-C back when the rest of the web was being built using CGI and Perl scripts.<p>I loved Smalltalk and I love Objective-C at a deep level.  The Objective-C runtime is incredibly powerful and its method dispatch is astonishingly efficient considering what it does. It is not as fast as vtables, but it isn&#x27;t as fragile either.<p>It might well interest you to know that WebObjects (I&#x27;m talking 1997 here) ran on HP-UX, SunOS, AIX, and one other popular Unix of the day that slips my mind and it too shipped with a lively scripting language called WebScript which was not so different from a minimal Swift today.<p>The thing is, once you dig into the Objective-C runtime and spend a bit of time trying to write an interpreter, you start to realize that the interpreter almost writes itself.  Swift is far from the first language built atop the Objective-C runtime.<p>Consider FScript (<a href="http://www.fscript.org" rel="nofollow">http:&#x2F;&#x2F;www.fscript.org</a>) has been around for well over a decade and does more or less the same thing except it gives you something closer to Smalltalk than Javascript and it includes some advanced matrix manipulation goodies as well.<p>The majority of the people squealing with glee over the introduction to Swift seem to be the sort of people I wouldn&#x27;t care to work with.  If a bit of syntax puts you off so much, lord help you when a truly new paradigm hits.<p>Swift looks to have some nice features, but it seems to be missing the low level access to the runtime that advanced developers can use like default message handlers (forwardInvocation:&#x2F;doesNotUnderstand:&#x2F;methodForSelector: kinds of stuff) and the ability to fiddle method dicts at runtime which can be very useful for intercepting strange errors and unexpected code paths.<p>So, yes, I do LOVE Objective-C.  It is my second favorite language to work in after Smalltalk and to those claiming that Swift will help them move over from Android because it less verbose - lets remember Java is the most boilerplate per capability language I&#x27;ve seen since COBOL.  I don&#x27;t know what those people are talking about.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7837106'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7837106' href='vote?id=7837106&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=mrsteveman1" class="hnuser">mrsteveman1</a> <span class="age"><a href="item?id=7837106">on June 2, 2014</a></span> <span id="unv_7837106"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837106)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I&#x27;ve done both, they were fun projects :)<p>The only thing that got in the way was the difficulty using the code away from OS X or iOS, and the fact that a lot of libraries for things like database access (especially those intended for iOS) were never intended to be used in a long running process. I found slow (3 week) memory leaks that someone writing an iOS app would never have hit.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7837744'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7837744' href='vote?id=7837744&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=jaegerpicker" class="hnuser">jaegerpicker</a> <span class="age"><a href="item?id=7837744">on June 3, 2014</a></span> <span id="unv_7837744"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837744)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I actually really like Objective-C and would totally use it as a back end language if there were good libraries to make use of. I&#x27;ve also written a couple of command line tools in Obj-C.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7836363'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7836363' href='vote?id=7836363&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=IanDrake" class="hnuser">IanDrake</a> <span class="age"><a href="item?id=7836363">on June 2, 2014</a></span> <span id="unv_7836363"></span><span class="par"></span> <a class="togg" n="10" href="javascript:void(0)" onclick="return toggle(event, 7836363)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">My dislike is that it uses [] for method calls.  It&#x27;s like making Objective-English where we swap Z and A and j for o, just for the hell of it.<p>If thzt sjunds like fun tj yju, thzn gj fjr Jboective-C.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836578'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7836578' href='vote?id=7836578&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=emp" class="hnuser">emp</a> <span class="age"><a href="item?id=7836578">on June 2, 2014</a></span> <span id="unv_7836578"></span><span class="par"></span> <a class="togg" n="5" href="javascript:void(0)" onclick="return toggle(event, 7836578)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">It&#x27;s not for the hell of it.<p>[ ] does not mean method call, it is the syntax for a message send.<p>Objective-C is a super set of C, adding an Smalltalk like object system to C. The delimiters say &quot;I am sending a message&quot;, which is different to a method call. Also, without them the language would be much more difficult to parse, and future changes to C could break the language. It&#x27;s lasted well (first appeared in 1993). Not as long as Lisp, perhaps it needs more [ ] :)</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836629'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7836629' href='vote?id=7836629&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=dragonwriter" class="hnuser">dragonwriter</a> <span class="age"><a href="item?id=7836629">on June 2, 2014</a></span> <span id="unv_7836629"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7836629)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&gt; It&#x27;s lasted well (first appeared in 1993).<p>19<i>8</i>3, actually.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836836'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7836836' href='vote?id=7836836&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=emp" class="hnuser">emp</a> <span class="age"><a href="item?id=7836836">on June 2, 2014</a></span> <span id="unv_7836836"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836836)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Thanks - I felt I should type 1983, but if felt wrong! I still had my Apple ][ back then.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7839445'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7839445' href='vote?id=7839445&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=IanDrake" class="hnuser">IanDrake</a> <span class="age"><a href="item?id=7839445">on June 3, 2014</a></span> <span id="unv_7839445"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7839445)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Thanks.  Just read up on messaging and now I like it even less   :(<p>In Smalltalk and Objective-C, the target of a message is resolved at runtime, with the receiving object itself interpreting the message. ... A consequence of this is that the message-passing system has no type checking.<p><a href="http://en.wikipedia.org/wiki/Objective_c#Messages" rel="nofollow">http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Objective_c#Messages</a></span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7846571'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7846571' href='vote?id=7846571&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=infinite8s" class="hnuser">infinite8s</a> <span class="age"><a href="item?id=7846571">on June 4, 2014</a></span> <span id="unv_7846571"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7846571)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">This is exactly what gives you the ability to easily wire up standard UI components and do tihngs like KVO. KVO is really difficult in something like C++ (for example, it&#x27;s practically impossible to do in Qt to create without a lot of templating&#x2F;boilerplace code).</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837535'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7837535' href='vote?id=7837535&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=jfb" class="hnuser">jfb</a> <span class="age"><a href="item?id=7837535">on June 3, 2014</a></span> <span id="unv_7837535"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7837535)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">This is in my opinion the best thing about Objective-C; it clearly delineates the object&#x2F;class and C dichotomy, making it easier for a C programmer (or a Smalltalk programmer!) to pick up. For years, the only changes from vanilla C were the brackets, &quot;#import&quot; and the @ literal syntax (IIRC).</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838182'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7838182' href='vote?id=7838182&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=jfb" class="hnuser">jfb</a> <span class="age"><a href="item?id=7838182">on June 3, 2014</a></span> <span id="unv_7838182"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838182)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Actually, if you ask me today, after dealing with Scala&#x27;s idea of how the Option type should work, I might say that nil propagation is the best thing about Objective-C.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7844284'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7844284' href='vote?id=7844284&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=jonhendry" class="hnuser">jonhendry</a> <span class="age"><a href="item?id=7844284">on June 4, 2014</a></span> <span id="unv_7844284"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7844284)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">That&#x27;s how I always felt. I liked the clear differentiation between C function calls and method calls on objects.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7836403'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7836403' href='vote?id=7836403&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=trustfundbaby" class="hnuser">trustfundbaby</a> <span class="age"><a href="item?id=7836403">on June 2, 2014</a></span> <span id="unv_7836403"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836403)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c73">very genius response!</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7835789'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7835789' href='vote?id=7835789&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=unreal37" class="hnuser">unreal37</a> <span class="age"><a href="item?id=7835789">on June 2, 2014</a></span> <span id="unv_7835789"></span><span class="par"></span> <a class="togg" n="7" href="javascript:void(0)" onclick="return toggle(event, 7835789)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">It&#x27;s not hate, but Objective-C can be intimidating.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836166'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7836166' href='vote?id=7836166&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=espitia" class="hnuser">espitia</a> <span class="age"><a href="item?id=7836166">on June 2, 2014</a></span> <span id="unv_7836166"></span><span class="par"></span> <a class="togg" n="6" href="javascript:void(0)" onclick="return toggle(event, 7836166)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I just spent the past 2 months learning obj-c, about to release my first app and boom, X out obj-c. my luck.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836235'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7836235' href='vote?id=7836235&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=rgbrgb" class="hnuser">rgbrgb</a> <span class="age"><a href="item?id=7836235">on June 2, 2014</a></span> <span id="unv_7836235"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836235)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">90% of what you learned are Cocoa frameworks and Apple-flavored OOP patterns that will be totally applicable to apps written in Swift. Fear not!</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7836857'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7836857' href='vote?id=7836857&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=krenoten" class="hnuser">krenoten</a> <span class="age"><a href="item?id=7836857">on June 2, 2014</a></span> <span id="unv_7836857"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836857)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I don&#x27;t know very much at all about objective C, but the way these things generally work is that you will benefit from the experience as you learn new languages, as it will be an anchor of context against which you may base fresh perceptions.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7836646'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7836646' href='vote?id=7836646&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=brianpgordon" class="hnuser">brianpgordon</a> <span class="age"><a href="item?id=7836646">on June 2, 2014</a></span> <span id="unv_7836646"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836646)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">You&#x27;ll always be able to contribute to NeXTSTEP. It&#x27;s not dead yet!</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7836284'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7836284' href='vote?id=7836284&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=lstamour" class="hnuser">lstamour</a> <span class="age"><a href="item?id=7836284">on June 2, 2014</a></span> <span id="unv_7836284"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836284)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">No worries, Objective-C is faaar from deprecated.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7864247'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7864247' href='vote?id=7864247&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=oldguysrule" class="hnuser">oldguysrule</a> <span class="age"><a href="item?id=7864247">on June 8, 2014</a></span> <span id="unv_7864247"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7864247)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Objective C isn’t going anywhere.<p>Swift is shit.  I suspect it will die in a couple years, like the misguided effort to get people to adopt the Java bridge or WebScript before that.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836062'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7836062' href='vote?id=7836062&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=badman_ting" class="hnuser">badman_ting</a> <span class="age"><a href="item?id=7836062">on June 2, 2014</a></span> <span id="unv_7836062"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7836062)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I don&#x27;t think syntax is really the issue. Using objc these days is clunky for reasons besides syntax.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836600'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7836600' href='vote?id=7836600&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=matwood" class="hnuser">matwood</a> <span class="age"><a href="item?id=7836600">on June 2, 2014</a></span> <span id="unv_7836600"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836600)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Like dealing with ARC, which is still clunky:<p><pre><code>    @lazy var asHTML: () -&gt; String = {
        [unowned self] in
        if let text = self.text {
            return &quot;&lt;\(self.name)&gt;\(text)&lt;&#x2F;\(self.name)&gt;&quot;
        } else {
            return &quot;&lt;\(self.name) &#x2F;&gt;&quot;
        }
    }
</code></pre>
Excerpt From: Apple Inc. “The Swift Programming Language.” iBooks. <a href="https://itun.es/us/jEUH0.l" rel="nofollow">https:&#x2F;&#x2F;itun.es&#x2F;us&#x2F;jEUH0.l</a></span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7838044'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7838044' href='vote?id=7838044&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=egypturnash" class="hnuser">egypturnash</a> <span class="age"><a href="item?id=7838044">on June 3, 2014</a></span> <span id="unv_7838044"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838044)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">To someone on the outside of ObjC, its just SO DAMN VERBOSE. It&#x27;s unapproachable the same way Java is unapproachable.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7838236'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7838236' href='vote?id=7838236&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=mwfunk" class="hnuser">mwfunk</a> <span class="age"><a href="item?id=7838236">on June 3, 2014</a></span> <span id="unv_7838236"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7838236)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I understand why ObjC&#x27;s syntax makes some people bristle, but I&#x27;ve never felt that way myself. It&#x27;s sort of like the people that really hate Python for no other reason than the meaningful whitespace. It&#x27;s unconventional, but once you understand the rationale for it it makes sense in a way that is at least forgivable if not likable.<p>There have been a lot of C-based object-oriented APIs over the years. GObject has a C API. On the Mac, there&#x27;s Core Foundation and a bunch of other OS X APIs that are built on top of it. For over a decade on X11, before gtk and Qt even existed, the closest thing there was to a standard graphical environment was Motif (the corresponding desktop environment was CDE), and Motif was built on top of Xt. Xt was yet another C-based object system, although it was specialized for designing UI components.<p>This is all well and good but you end up with a ton of boilerplate code that does nothing but manage the lifecycles of the object instances (retain&#x2F;release for example), and lends itself to extremely verbose function calls in place of object methods.<p>One possible solution is to put together some really elaborate preprocessor macros to make it look like you have extended the C language to include special syntax for your object system, so you can at least replace this:<p>obj foo = obj_factory();
int c = obj_getNumberOfElements(foo);<p>...with something more compact like this:<p>obj foo = [Obj new];
int c = [foo numberOfElements];<p>(the second example is ObjC-ish but the former is nothing in particular other than just what the typical C object APIs tend to look like)<p>The only catch is that the little mini-language you are extending C with using macros can&#x27;t use existing C syntax, because you can only add to the language, not alter the behavior of existing operators. So, you can&#x27;t just do method calls using a dot syntax on the instance (such as foo.numberOfElements()). So, you have to come up with something new. Maybe you always liked Smalltalk, and maybe you even based much of behavior of your object system on how Smalltalk objects behave and interact? If so, you might settle on the bracket notation. This has the added benefit of making it very clear when a chunk of code is run-of-the-mill C versus when the code is triggering the syntactic sugar you created with macros to add support for your object system to the C language.<p>C++ doesn&#x27;t exist yet, or else you might&#x27;ve just gone with that instead of rolling your own thing. Eventually C++ does exist, and you start to feel a little primitive for sticking with the weird macro language. You eventually build your mini-language into a C compiler so you don&#x27;t have use the macros anymore. You experiment with some new alternatives to the syntax that are more conventional, but no one uses them. Many developers like that the non-C-ish syntax makes it easy to distinguish between straight C code vs. interactions with the object system, which has its own set of rules and conventions.<p>Anyway, that&#x27;s mostly speculation, but something like that story is how I&#x27;ve always thought Objective-C evolved over the years. I don&#x27;t mind it nearly as much as long as I don&#x27;t think of it as a separate programming language from C (like C++ or Java or pretty much anything else these days), but rather think of it as C with some useful syntactic sugar that gets rid of a ton of boilerplate code for a particular C-based object-oriented API.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838674'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7838674' href='vote?id=7838674&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=austinz" class="hnuser">austinz</a> <span class="age"><a href="item?id=7838674">on June 3, 2014</a></span> <span id="unv_7838674"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838674)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">According to <a href="http://en.wikipedia.org/wiki/Objective-C#History" rel="nofollow">http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Objective-C#History</a>, that&#x27;s actually almost exactly how it came to be. (Apple even experimented with changing the syntax: <a href="http://en.wikipedia.org/wiki/Objective-C#.22Modern.22_Objective-C_syntax_.281997.29" rel="nofollow">http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Objective-C#.22Modern.22_Object...</a>)</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7838770'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7838770' href='vote?id=7838770&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=return0" class="hnuser">return0</a> <span class="age"><a href="item?id=7838770">on June 3, 2014</a></span> <span id="unv_7838770"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838770)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">It really reeks of 80s. I &#x27;d rather program in plain C.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7835294'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7835294' href='vote?id=7835294&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=creativeembassy" class="hnuser">creativeembassy</a> <span class="age"><a href="item?id=7835294">on June 2, 2014</a></span> <span id="unv_7835294"></span><span class="par"></span> <a class="togg" n="15" href="javascript:void(0)" onclick="return toggle(event, 7835294)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I spent a lot of time trying to do stuff with ObjectiveC, but just hated the syntax. That&#x27;s been the biggest thing keeping me from developing Mac OSX apps; I just prefer Ruby&#x27;s simplicity. I&#x27;m going to seriously give Swift a try.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7835363'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7835363' href='vote?id=7835363&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=will_work4tears" class="hnuser">will_work4tears</a> <span class="age"><a href="item?id=7835363">on June 2, 2014</a></span> <span id="unv_7835363"></span><span class="par"></span> <a class="togg" n="8" href="javascript:void(0)" onclick="return toggle(event, 7835363)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Yep, same here. It looks pretty JavaScript-y, which is familiar at least. I think this is a good move on Apple&#x27;s part.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7835527'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7835527' href='vote?id=7835527&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=stcredzero" class="hnuser">stcredzero</a> <span class="age"><a href="item?id=7835527">on June 2, 2014</a></span> <span id="unv_7835527"></span><span class="par"></span> <a class="togg" n="7" href="javascript:void(0)" onclick="return toggle(event, 7835527)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">It&#x27;s probably a wise decision to have an &quot;Algol patterned&quot; language. No non Algol patterned language has ever become a  mainstream programming language to my knowledge.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7835822'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7835822' href='vote?id=7835822&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=dfc" class="hnuser">dfc</a> <span class="age"><a href="item?id=7835822">on June 2, 2014</a></span> <span id="unv_7835822"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7835822)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I am not a programming language wonk; so I imagine most languages I am familiar-with&#x2F;know-of are necessarily  Algol patterned.  What are some non-Algol patterned languages?</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7835844'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7835844' href='vote?id=7835844&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=davidw" class="hnuser">davidw</a> <span class="age"><a href="item?id=7835844">on June 2, 2014</a></span> <span id="unv_7835844"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7835844)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Lisp, Forth, Prolog (and Erlang), Smalltalk, Haskell, and Tcl all come to mind.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7836050'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7836050' href='vote?id=7836050&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=stcredzero" class="hnuser">stcredzero</a> <span class="age"><a href="item?id=7836050">on June 2, 2014</a></span> <span id="unv_7836050"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836050)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">In particular, Obj-C = Smalltalk + C. If you subtract C from Obj-C, you&#x27;d most easily just end up with Smalltalk. But that&#x27;s not the right move for mass adoption.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7836385'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7836385' href='vote?id=7836385&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Someone" class="hnuser">Someone</a> <span class="age"><a href="item?id=7836385">on June 2, 2014</a></span> <span id="unv_7836385"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7836385)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I agree with the first, but disagree with the second part:<p>COBOL, Fortran, JCL (not Turing complete, AFAIK), SQL, Excel, DOS batch files all were (fairly) mainstream at some time.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837198'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7837198' href='vote?id=7837198&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=nl" class="hnuser">nl</a> <span class="age"><a href="item?id=7837198">on June 2, 2014</a></span> <span id="unv_7837198"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7837198)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Fortran came before Algol and arguably influenced it[1]. I agree with COBOL and SQL in particular, though.<p>[1] <a href="http://www.digibarn.com/collections/posters/tongues/ComputerLanguagesChart-med.png" rel="nofollow">http:&#x2F;&#x2F;www.digibarn.com&#x2F;collections&#x2F;posters&#x2F;tongues&#x2F;Computer...</a></span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838644'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="240"></td><td valign="top" class="votelinks"><center><a id='up_7838644' href='vote?id=7838644&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Someone" class="hnuser">Someone</a> <span class="age"><a href="item?id=7838644">on June 3, 2014</a></span> <span id="unv_7838644"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838644)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">The correctness of that image can be discussed. Fortran was specified in 1954, but the first compiler shipped in April 1957 (<a href="http://en.wikipedia.org/wiki/Fortran#History" rel="nofollow">http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Fortran#History</a>). That is earlier than Algol 58 (first two implementations in 1958 (<a href="http://en.wikipedia.org/wiki/ALGOL_58#Time_line_of_implementations_of_ALGOL_58_variants)" rel="nofollow">http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;ALGOL_58#Time_line_of_implement...</a>), but close.<p>More importantly, &quot;inspired by&quot; does not imply that Fortran 58 is Algol-like (that same picture would declare Fortran Lisp-like, too)<p>For me, <a href="http://en.wikipedia.org/wiki/Fortran#Simple_FORTRAN_II_program" rel="nofollow">http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Fortran#Simple_FORTRAN_II_progr...</a> certainly is nothing like Algol.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
            <tr class='athing comtr ' id='7836984'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7836984' href='vote?id=7836984&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=VeejayRampay" class="hnuser">VeejayRampay</a> <span class="age"><a href="item?id=7836984">on June 2, 2014</a></span> <span id="unv_7836984"></span><span class="par"></span> <a class="togg" n="5" href="javascript:void(0)" onclick="return toggle(event, 7836984)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Ruby is simple and beautiful, isn&#x27;t it? Too bad it never got the shower of money from big backers Javascript, PHP and now Swift got blessed with.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837251'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7837251' href='vote?id=7837251&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=timr" class="hnuser">timr</a> <span class="age"><a href="item?id=7837251">on June 2, 2014</a></span> <span id="unv_7837251"></span><span class="par"></span> <a class="togg" n="4" href="javascript:void(0)" onclick="return toggle(event, 7837251)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Beauty is in the eye of the beholder, but Ruby is <i>anything</i> but simple.  It has one of the most complicated syntaxes of any programming language in common use.<p>Perl and C++ are still in the lead, but with stuff like the gratuitous introduction of alternate hash syntax, new-style lambdas, etc., Ruby is catching up.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837685'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7837685' href='vote?id=7837685&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=steveklabnik" class="hnuser">steveklabnik</a> <span class="age"><a href="item?id=7837685">on June 3, 2014</a></span> <span id="unv_7837685"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837685)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Ruby&#x27;s grammar is complex, but it&#x27;s object model is incredibly simple.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
          <tr class='athing comtr ' id='7838681'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7838681' href='vote?id=7838681&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=VeejayRampay" class="hnuser">VeejayRampay</a> <span class="age"><a href="item?id=7838681">on June 3, 2014</a></span> <span id="unv_7838681"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838681)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Introduction of a new hash syntax wasn&#x27;t gratuitous really. I think the point was to make up for the lack of proper keyword arguments. Now that they&#x27;re available, it&#x27;s true that it doesn&#x27;t have a reason to stand on its own, but it does make the code more readable and concise, as does the stabby lambda syntax. Though I do agree with your point on simplicity really, the language does offer way too many ways to do the same thing sometimes.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7837705'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7837705' href='vote?id=7837705&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=alecthomas" class="hnuser">alecthomas</a> <span class="age"><a href="item?id=7837705">on June 3, 2014</a></span> <span id="unv_7837705"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837705)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">It&#x27;ll never catch C++ [1]<p>[1] <a href="http://stackoverflow.com/questions/23980929/what-changes-introduced-in-c14-can-potentially-break-a-program-written-in-c1/23980931#23980931" rel="nofollow">http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;23980929&#x2F;what-changes-int...</a></span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837614'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7837614' href='vote?id=7837614&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=elithrar" class="hnuser">elithrar</a> <span class="age"><a href="item?id=7837614">on June 3, 2014</a></span> <span id="unv_7837614"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837614)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Tried <a href="http://macruby.org/" rel="nofollow">http:&#x2F;&#x2F;macruby.org&#x2F;</a> ?</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7835414'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7835414' href='vote?id=7835414&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=slantyyz" class="hnuser">slantyyz</a> <span class="age"><a href="item?id=7835414">on June 2, 2014</a></span> <span id="unv_7835414"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7835414)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Agreed. I would go so far as to say that this was &quot;one more thing&quot; worthy.<p>It&#x27;s definitely more exciting than something like an incremental update to the Apple TV.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7835724'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7835724' href='vote?id=7835724&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=mercer" class="hnuser">mercer</a> <span class="age"><a href="item?id=7835724">on June 2, 2014</a></span> <span id="unv_7835724"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7835724)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">My dad tuned out as the keynote got to this point, but for me (as a web developer... for now!) this was the highlight.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7835936'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7835936' href='vote?id=7835936&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=bkurtz13" class="hnuser">bkurtz13</a> <span class="age"><a href="item?id=7835936">on June 2, 2014</a></span> <span id="unv_7835936"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7835936)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I feel the exact same way. For a while now I&#x27;ve been looking at other ways to develop for iOS, such as HTML5 with PhoneGap or C# with Xamarin, but it&#x27;s always been a kludge.<p>Swift looks amazing and I&#x27;m really excited to try it out tonight! Great job Apple devs.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7835868'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7835868' href='vote?id=7835868&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=dfc" class="hnuser">dfc</a> <span class="age"><a href="item?id=7835868">on June 2, 2014</a></span> <span id="unv_7835868"></span><span class="par"></span> <a class="togg" n="6" href="javascript:void(0)" onclick="return toggle(event, 7835868)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00"><p><pre><code>  &gt; So if Apple&#x27;s goal was to get new devs into the iOS world, at least
  &gt; from 10k feet, it&#x27;s working
</code></pre>
They just announced Swift, at a conference for Apple developers, with live streaming that is only easily accessed from an ios device. I think it is probably premature to pop the corks and celebrate the efficacy of the get new developers initiative.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836154'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7836154' href='vote?id=7836154&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=lavamantis" class="hnuser">lavamantis</a> <span class="age"><a href="item?id=7836154">on June 2, 2014</a></span> <span id="unv_7836154"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836154)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">As someone wise mentioned to me, Objective-c was 20% of the problem and Apple&#x27;s silly rules and controls around app distribution are the other 80%.  As someone who had their app available in the app store for nearly 8 months including 3 approved updates before being (seemingly) arbitrarily rejected, I feel the pain of that other 80%.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7835889'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7835889' href='vote?id=7835889&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=tylermac1" class="hnuser">tylermac1</a> <span class="age"><a href="item?id=7835889">on June 2, 2014</a></span> <span id="unv_7835889"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7835889)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">How else are they supposed to announce it? It&#x27;s simply that, an announcement. People are talking about it now and there&#x27;s info on the Apple site. I see this as a huge push forward for new developers.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7835956'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7835956' href='vote?id=7835956&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=stonemetal" class="hnuser">stonemetal</a> <span class="age"><a href="item?id=7835956">on June 2, 2014</a></span> <span id="unv_7835956"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7835956)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">The announcement was fine, it is the &quot;its working&quot; part that is odd considering it is less than a day old.  Let&#x27;s see if it actually attracts new developers before we declare it a mighty success.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7835970'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7835970' href='vote?id=7835970&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=mtrimpe" class="hnuser">mtrimpe</a> <span class="age"><a href="item?id=7835970">on June 2, 2014</a></span> <span id="unv_7835970"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7835970)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Well; based on the promise of immediate inclusion in the app store and a very well thought out book about the language available for free I&#x27;d say they&#x27;re doing rather well so far already.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836270'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7836270' href='vote?id=7836270&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=dfc" class="hnuser">dfc</a> <span class="age"><a href="item?id=7836270">on June 2, 2014</a></span> <span id="unv_7836270"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836270)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">You mentioned things that are likely to bring about the desired result of creating new ios developers. I am not disagreeing about the likelihood of success. I am simply saying that <i>T + 8h</i> is probably too soon to conclude that the program is successfully creating new ios developers. To be honest I think it is absurd to expect that such a program from any company could bring about the desired goal of creating new developers in less than eight hours.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838087'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7838087' href='vote?id=7838087&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=sleepyhead" class="hnuser">sleepyhead</a> <span class="age"><a href="item?id=7838087">on June 3, 2014</a></span> <span id="unv_7838087"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838087)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">btw: <a href="http://www.rubymotion.com/" rel="nofollow">http:&#x2F;&#x2F;www.rubymotion.com&#x2F;</a></span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
                <tr class='athing comtr ' id='7835355'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="0"></td><td valign="top" class="votelinks"><center><a id='up_7835355' href='vote?id=7835355&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=tptacek" class="hnuser">tptacek</a> <span class="age"><a href="item?id=7835355">on June 2, 2014</a></span> <span id="unv_7835355"></span><span class="par"></span> <a class="togg" n="14" href="javascript:void(0)" onclick="return toggle(event, 7835355)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I just skimmed the tour, and my impression is: Swift is a compiled, Objective-C compatible Javascript-alike with an ObjC-like object model, generics, and string interpolation. No exceptions. Based on LLVM and appears to inherit the same data structures as Cocoa apps (Dictionaries, Arrays, &amp;c).<p>It feels very lightweight, sort of like an analog to what Javascript is in a browser.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7835456'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7835456' href='vote?id=7835456&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=pavlov" class="hnuser">pavlov</a> <span class="age"><a href="item?id=7835456">on June 2, 2014</a></span> <span id="unv_7835456"></span><span class="par"></span> <a class="togg" n="4" href="javascript:void(0)" onclick="return toggle(event, 7835456)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I think it uses the Objective-C runtime directly, so it has access to all the frameworks and Swift classes can be loaded into Objective-C projects as well.<p>There are a few other languages that do this with the Obj-C runtime, for example a Lisp variant called Nu[0].<p>[0] <a href="http://programming.nu/" rel="nofollow">http:&#x2F;&#x2F;programming.nu&#x2F;</a></span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7835592'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7835592' href='vote?id=7835592&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=tinco" class="hnuser">tinco</a> <span class="age"><a href="item?id=7835592">on June 2, 2014</a></span> <span id="unv_7835592"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7835592)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">There&#x27;s a Ruby implementation by a former Apple employee that does this as well: <a href="http://www.rubymotion.com/" rel="nofollow">http:&#x2F;&#x2F;www.rubymotion.com&#x2F;</a></span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836786'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7836786' href='vote?id=7836786&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Karunamon" class="hnuser">Karunamon</a> <span class="age"><a href="item?id=7836786">on June 2, 2014</a></span> <span id="unv_7836786"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836786)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Unfortunately it requires a $200 up front investment before you can even toy with the language. RubyMotion was my first thought when I saw the code happening on the keynote, but at least this will be free with the OS.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7835673'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7835673' href='vote?id=7835673&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=mpweiher" class="hnuser">mpweiher</a> <span class="age"><a href="item?id=7835673">on June 2, 2014</a></span> <span id="unv_7835673"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7835673)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">[1] Objective-Smalltalk  <a href="http://objective.st/" rel="nofollow">http:&#x2F;&#x2F;objective.st&#x2F;</a></span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7838683'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7838683' href='vote?id=7838683&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=sriku" class="hnuser">sriku</a> <span class="age"><a href="item?id=7838683">on June 3, 2014</a></span> <span id="unv_7838683"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7838683)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&gt; No exceptions.<p>This is a big shift. With such a rich type system (very Hindley-Milner .. even with &quot;protocols&quot; that feel like type classes?), there is no need for exceptions, for much the same reason that Haskell doesn&#x27;t have exceptions in the core language, but only a monad. This would force error situations to be explicitly modeled in the types of objects returned by functions&#x2F;methods. A good thing I think.<p>However, it does leave the hole of what if an ObjC framework you call on raises an exception? Can&#x27;t handle it within Swift code? Another big omission in the manual is lack of mention of anything to do with concurrency, though &quot;use GCD&quot; is seen as the solution (Swift closures are compatible with ObjC blocks).</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838999'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7838999' href='vote?id=7838999&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=tomp" class="hnuser">tomp</a> <span class="age"><a href="item?id=7838999">on June 3, 2014</a></span> <span id="unv_7838999"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7838999)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I disagree. I use exceptions a lot in OCaml. For example, when implementing a recursive type-checker, you really want to be able to abort (all the recursive invocations) quickly if e.g. you find an undeclared variable or a type error. Using an ADT would IMO incur an unacceptable syntactic and cognitive overhead.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7852797'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7852797' href='vote?id=7852797&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Chattered" class="hnuser">Chattered</a> <span class="age"><a href="item?id=7852797">on June 5, 2014</a></span> <span id="unv_7852797"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7852797)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Ocaml exceptions are a misnomer, since they are often used as a control flow primitive for <i>non-exceptional</i> circumstances. The point is that they are cheap. Contrast with Java, where you wouldn&#x27;t want to use exceptions the way you use them in Ocaml, and would instead favour other non-local exit primitives such as &quot;return&quot;, &quot;break&quot; and &quot;continue.&quot;<p>Haskell doesn&#x27;t care about this stuff, because lazy evaluation gives you the same control-flow patterns, and the exception monad ends up operationally equivalent to checked exceptions, but now with possibly exception throwing values made first-class. I doubt the same can be said of Swift.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7835788'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7835788' href='vote?id=7835788&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=Q6T46nT668w6i3m" class="hnuser">Q6T46nT668w6i3m</a> <span class="age"><a href="item?id=7835788">on June 2, 2014</a></span> <span id="unv_7835788"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7835788)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Dictionary isn’t NSDictionary or NSMutableDictionary because of type inference issues (“they can use any kind of object as their keys and values and do not provide any information about the nature of these objects”).</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7836239'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7836239' href='vote?id=7836239&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=jroesch" class="hnuser">jroesch</a> <span class="age"><a href="item?id=7836239">on June 2, 2014</a></span> <span id="unv_7836239"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836239)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">You unfortunately probably have to deal with exceptions when crossing into Objective-C land because of <a href="https://developer.apple.com/library/mac/documentation/cocoa/reference/foundation/Classes/NSException_Class/Reference/Reference.html" rel="nofollow">https:&#x2F;&#x2F;developer.apple.com&#x2F;library&#x2F;mac&#x2F;documentation&#x2F;cocoa&#x2F;...</a>.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7838128'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7838128' href='vote?id=7838128&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=chwahoo" class="hnuser">chwahoo</a> <span class="age"><a href="item?id=7838128">on June 3, 2014</a></span> <span id="unv_7838128"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838128)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I&#x27;m not seeing the javascript-alike-ness.  What caused that connection to jump out at you?<p>I see the standard static FP features (from ML, Haskell, Scala, F#) with the syntactic flavor or Rust and some C# tossed in.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7836083'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7836083' href='vote?id=7836083&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=badman_ting" class="hnuser">badman_ting</a> <span class="age"><a href="item?id=7836083">on June 2, 2014</a></span> <span id="unv_7836083"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836083)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">JS has exceptions though. I didn&#x27;t notice that bit until just now… hmm. Could turn into lots of return-checking boilerplate. I&#x27;m still excited about this, very much so, but I think exceptions are worth keeping.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7835772'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7835772' href='vote?id=7835772&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=nardi" class="hnuser">nardi</a> <span class="age"><a href="item?id=7835772">on June 2, 2014</a></span> <span id="unv_7835772"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7835772)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">It&#x27;s also apparently super fast, and implicitly typed, and designed for safety.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7835828'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><img src="s.gif" height="1" width="14"></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <span class="age"><a href="item?id=7835828">on June 2, 2014</a></span> <span id="unv_7835828"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7835828)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  [deleted]              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7835853'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7835853' href='vote?id=7835853&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=wmf" class="hnuser">wmf</a> <span class="age"><a href="item?id=7835853">on June 2, 2014</a></span> <span id="unv_7835853"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7835853)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">In the keynote they said Swift is faster than Obj-C.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
                    <tr class='athing comtr ' id='7835720'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="0"></td><td valign="top" class="votelinks"><center><a id='up_7835720' href='vote?id=7835720&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=kjjw" class="hnuser">kjjw</a> <span class="age"><a href="item?id=7835720">on June 2, 2014</a></span> <span id="unv_7835720"></span><span class="par"></span> <a class="togg" n="14" href="javascript:void(0)" onclick="return toggle(event, 7835720)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&quot;The company says that Swift apps are significantly faster than Objective-C apps, outperforming them by over 93x.&quot;<p>With a graph showing ObjC at 127x faster than Python, Swift 220x faster than Python.<p>Thus the conclusion is 220 - 127, Swift is 93x faster than ObjC.<p>Someone needs to resit their GCSEs.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7835862'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7835862' href='vote?id=7835862&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=cjslep" class="hnuser">cjslep</a> <span class="age"><a href="item?id=7835862">on June 2, 2014</a></span> <span id="unv_7835862"></span><span class="par"></span> <a class="togg" n="11" href="javascript:void(0)" onclick="return toggle(event, 7835862)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&quot;93x faster&quot; sounds roughly like a 46.5x improvement in marketing.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836086'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7836086' href='vote?id=7836086&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=stcredzero" class="hnuser">stcredzero</a> <span class="age"><a href="item?id=7836086">on June 2, 2014</a></span> <span id="unv_7836086"></span><span class="par"></span> <a class="togg" n="9" href="javascript:void(0)" onclick="return toggle(event, 7836086)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">It&#x27;s not only possible, it&#x27;s even not uncommon for a C programmer to get a 90X improvement in speed <i>in their own C program.</i>  If you have naive memory management, or incorrectly implemented concurrency or parallelism, you can easily lose 2 orders of magnitude speed.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836576'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7836576' href='vote?id=7836576&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=pling" class="hnuser">pling</a> <span class="age"><a href="item?id=7836576">on June 2, 2014</a></span> <span id="unv_7836576"></span><span class="par"></span> <a class="togg" n="7" href="javascript:void(0)" onclick="return toggle(event, 7836576)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">This. In my case a 1Mbyte memcpy in the middle of a loop this morning. Enough to blow the CPU cache out of the water...<p>300x improvement instantly by moving it out of the loop.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836824'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7836824' href='vote?id=7836824&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=dbaupp" class="hnuser">dbaupp</a> <span class="age"><a href="item?id=7836824">on June 2, 2014</a></span> <span id="unv_7836824"></span><span class="par"></span> <a class="togg" n="6" href="javascript:void(0)" onclick="return toggle(event, 7836824)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Are you sure it wasn&#x27;t just because you were then no longer doing a large memcpy repeatedly?</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836876'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7836876' href='vote?id=7836876&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=pling" class="hnuser">pling</a> <span class="age"><a href="item?id=7836876">on June 2, 2014</a></span> <span id="unv_7836876"></span><span class="par"></span> <a class="togg" n="5" href="javascript:void(0)" onclick="return toggle(event, 7836876)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Yes it was entirely covered by that :)<p>I think it was covered by &quot;naive memory management&quot; and &quot;shitty outsourcing&quot;. I&#x27;m paid to fix their stuff.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7839009'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="240"></td><td valign="top" class="votelinks"><center><a id='up_7839009' href='vote?id=7839009&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=tomp" class="hnuser">tomp</a> <span class="age"><a href="item?id=7839009">on June 3, 2014</a></span> <span id="unv_7839009"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7839009)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Haha :) Maybe the shipped a better product, but the management said &quot;No, it&#x27;s not possible that this could run that fast. Something must be wrong.&quot;, so they put in some &quot;waiting&quot;.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7838071'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="240"></td><td valign="top" class="votelinks"><center><a id='up_7838071' href='vote?id=7838071&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=dbaupp" class="hnuser">dbaupp</a> <span class="age"><a href="item?id=7838071">on June 3, 2014</a></span> <span id="unv_7838071"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7838071)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">If the problem was just the time taken to do a 1MB copy inside a loop, why did you say the problem was clearing the CPU caches?</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838373'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="280"></td><td valign="top" class="votelinks"><center><a id='up_7838373' href='vote?id=7838373&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=pling" class="hnuser">pling</a> <span class="age"><a href="item?id=7838373">on June 3, 2014</a></span> <span id="unv_7838373"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7838373)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Because the CPU has 32k of cache in this case (ARM) so the memcpy was evicting the entire cache several times in the loop as a side effect of doing the work. The actual function of the loop had good cache locality as the data was 6 stack vars totalling about 8k.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838385'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="320"></td><td valign="top" class="votelinks"><center><a id='up_7838385' href='vote?id=7838385&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=dbaupp" class="hnuser">dbaupp</a> <span class="age"><a href="item?id=7838385">on June 3, 2014</a></span> <span id="unv_7838385"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838385)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">So? Copying a megabyte is a really expensive thing to do inside a loop, even ignoring caches. (A full speed memcpy would take 40 microseconds, based on a memory bandwidth of 24 GB&#x2F;s, which is a long time.)</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
              <tr class='athing comtr ' id='7836328'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7836328' href='vote?id=7836328&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=cjslep" class="hnuser">cjslep</a> <span class="age"><a href="item?id=7836328">on June 2, 2014</a></span> <span id="unv_7836328"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836328)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">My most painful personal experience dealing with this exact problem was with CUDA warps, during my undergrad research work.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7836285'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7836285' href='vote?id=7836285&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=_deh" class="hnuser">_deh</a> <span class="age"><a href="item?id=7836285">on June 2, 2014</a></span> <span id="unv_7836285"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836285)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Marketing are claiming a 91.3x.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7835870'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7835870' href='vote?id=7835870&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=maaaats" class="hnuser">maaaats</a> <span class="age"><a href="item?id=7835870">on June 2, 2014</a></span> <span id="unv_7835870"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7835870)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">For context: This story previously pointed to an article, but has now been changed to point to Apple.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7836490'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7836490' href='vote?id=7836490&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=bendyorke" class="hnuser">bendyorke</a> <span class="age"><a href="item?id=7836490">on June 2, 2014</a></span> <span id="unv_7836490"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836490)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&quot;outperforming them by over 93x&quot; is technically different than &quot;93x faster&quot;... Although I agree it is a cheap way to put it :)</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
                <tr class='athing comtr ' id='7836113'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="0"></td><td valign="top" class="votelinks"><center><a id='up_7836113' href='vote?id=7836113&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=solutionyogi" class="hnuser">solutionyogi</a> <span class="age"><a href="item?id=7836113">on June 2, 2014</a></span> <span id="unv_7836113"></span><span class="par"></span> <a class="togg" n="4" href="javascript:void(0)" onclick="return toggle(event, 7836113)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Enumerations (from: <a href="https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Enumerations.html#//apple_ref/doc/uid/TP40014097-CH12-XID_185" rel="nofollow">https:&#x2F;&#x2F;developer.apple.com&#x2F;library&#x2F;prerelease&#x2F;ios&#x2F;documenta...</a>):<p>Unlike C and Objective-C, Swift enumeration members are not assigned a default integer value when they are created. In the CompassPoints example above, North, South, East and West do not implicitly equal 0, 1, 2 and 3. Instead, the different enumeration members are fully-fledged values in their own right, with an explicitly-defined type of CompassPoint.<p>+100 for that. This will help developer avoid whole class of bugs.<p>Enumerations also support associated values. Enums in .NET are very poorly defined. Looks like Swift got it right.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836194'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7836194' href='vote?id=7836194&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=jevinskie" class="hnuser">jevinskie</a> <span class="age"><a href="item?id=7836194">on June 2, 2014</a></span> <span id="unv_7836194"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7836194)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Indeed. Luckily C++11 took care of the issue on the C++ side.<p><a href="http://en.wikipedia.org/wiki/C++11#Strongly_typed_enumerations" rel="nofollow">http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;C++11#Strongly_typed_enumeratio...</a></span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7836779'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7836779' href='vote?id=7836779&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=platz" class="hnuser">platz</a> <span class="age"><a href="item?id=7836779">on June 2, 2014</a></span> <span id="unv_7836779"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7836779)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Do Swift&#x27;s enumerations allow recursive definitions?</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7864256'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7864256' href='vote?id=7864256&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=oldguysrule" class="hnuser">oldguysrule</a> <span class="age"><a href="item?id=7864256">on June 8, 2014</a></span> <span id="unv_7864256"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7864256)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&gt;Unlike C and Objective-C, Swift enumeration members are not assigned a default integer value when they are created<p>Well that’s gonna make storing persistent values tricky.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
                <tr class='athing comtr ' id='7837531'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="0"></td><td valign="top" class="votelinks"><center><a id='up_7837531' href='vote?id=7837531&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=reuven" class="hnuser">reuven</a> <span class="age"><a href="item?id=7837531">on June 3, 2014</a></span> <span id="unv_7837531"></span><span class="par"></span> <a class="togg" n="18" href="javascript:void(0)" onclick="return toggle(event, 7837531)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I find it a bit sad that with all of the languages that already exist, Apple found it necessary to invent a completely new one -- and then make it proprietary.  Why not use Ruby, or Python, or JavaScript -- or even Go, Rust, Clojure, or Scala?  (Yes, I realize that the latter two run on the JVM, which would have been problematic in other ways.)<p>Heck, they could have bought RubyMotion and made Ruby the high-level language of choice for development.<p>I realize that Apple has a long tradition of NIH (&quot;not invented here&quot;), and in many cases, it suits them, and their users, quite well.  But there are so many languages out there already that it seems like a waste for Apple to create a new one.  Just the overhead of developing the language, nurturing its ecosystem, and ensuring compatibility seems like it&#x27;ll cost more time and money than would have been necessary if they had gone with an existing language.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7837561'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7837561' href='vote?id=7837561&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=coldtea" class="hnuser">coldtea</a> <span class="age"><a href="item?id=7837561">on June 3, 2014</a></span> <span id="unv_7837561"></span><span class="par"></span> <a class="togg" n="6" href="javascript:void(0)" onclick="return toggle(event, 7837561)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&gt;<i>Why not use Ruby, or Python, or JavaScript -- or even Go, Rust, Clojure, or Scala? (Yes, I realize that the latter two run on the JVM, which would have been problematic in other ways.) Heck, they could have bought RubyMotion and made Ruby the high-level language of choice for development.</i><p>Because OBVIOUSLY none of them solve the problems they wanted to solve (interoperabillity with Objective-C, fast, native, IDE integration, etc. Including RubyMotion which is a half-arsed implementation.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838709'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7838709' href='vote?id=7838709&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=oblio" class="hnuser">oblio</a> <span class="age"><a href="item?id=7838709">on June 3, 2014</a></span> <span id="unv_7838709"></span><span class="par"></span> <a class="togg" n="5" href="javascript:void(0)" onclick="return toggle(event, 7838709)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I&#x27;m not sure if you&#x27;re kidding or not.<p>IDE integration for a new language? They wrote it themselves. Do you think it would have been harder to integrate an existing language?
Fast &amp; native also also trivially solvable.<p>I don&#x27;t know about interop with Objective-C, that&#x27;s probably the hardest part from your list.<p>But complaining about IDE integration when they&#x27;re also the creators of the IDE is... silly...</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7843791'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7843791' href='vote?id=7843791&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=coldtea" class="hnuser">coldtea</a> <span class="age"><a href="item?id=7843791">on June 4, 2014</a></span> <span id="unv_7843791"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7843791)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">First, I like how you break apart the issues I raised (like &quot;IDE integration&quot;) when I said that they wanted to solve ALL this problems at once.<p>So, even if just adding IDE integration for an existing language was easier than creating a new one, using an existing language wouldn&#x27;t solve their other issues (e.g Obj-C interoperabillity with message passing, protocols, named parameters et al). And RubyMotion wouldn&#x27;t permit all the optimizations they did, nor the kind of type safety they added.<p>&gt;<i>But complaining about IDE integration when they&#x27;re also the creators of the IDE is... silly...</i><p>We&#x27;re not talking about PyCharm level of IDE integration here. Not even about the current level of Obj-C&#x2F;C++ integration XCode offers (for which they had to create LLVM tooling and LLDB to enable all the features they wanted to offer). It goes beyond that.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7839912'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7839912' href='vote?id=7839912&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=MrGando" class="hnuser">MrGando</a> <span class="age"><a href="item?id=7839912">on June 3, 2014</a></span> <span id="unv_7839912"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7839912)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I see that you don&#x27;t really understand what&#x27;s needed for real IDE integration. Please, understand one of the main reasons of Apple creating Clang... (hint: because the GCC guys wouldn&#x27;t take their patches to improve Objc-C &amp; add facilities for IDE integration fast enough)<p>Clang was easier to integrate with an IDE than GCC, and I strongly believe (after seeing what apple showed yesterday) that swift integration is even simpler.<p>( They must have made a new LLVM front-end to embrace IDEs equally or better than Clang )<p>So no, it&#x27;s not silly to try to design better to have a better integration with an IDE that you control too.<p>Cheers.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7842262'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="160"></td><td valign="top" class="votelinks"><center><a id='up_7842262' href='vote?id=7842262&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=oblio" class="hnuser">oblio</a> <span class="age"><a href="item?id=7842262">on June 3, 2014</a></span> <span id="unv_7842262"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7842262)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Well, that may be true for GCC but Ruby, Python &amp; co are well integrated into many third party IDEs. So that point, at least, is moot.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7843769'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="200"></td><td valign="top" class="votelinks"><center><a id='up_7843769' href='vote?id=7843769&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=coldtea" class="hnuser">coldtea</a> <span class="age"><a href="item?id=7843769">on June 4, 2014</a></span> <span id="unv_7843769"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7843769)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">&quot;Ruby, Python &amp; co are well integrated into many third party IDEs&quot; perhaps you&#x27;re not familiar with the level of IDE integration we&#x27;re talking about here.<p>Most (if not all) IDE&#x27;s Ruby and Python integration is BS.<p>We&#x27;re talking about real AST-based highlighting and suggestions, auto fixes, autocomplete for all APIs available (AND your own custom modules), integration with the debugger and the build system, and in Swift&#x27;s case also integration with the REPL, LighTable-style live-variables and Brett-Victor-inspired live coding environment.<p>This is not your grandfather&#x27;s PyCharm.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
            <tr class='athing comtr ' id='7837816'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7837816' href='vote?id=7837816&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=UK-AL" class="hnuser">UK-AL</a> <span class="age"><a href="item?id=7837816">on June 3, 2014</a></span> <span id="unv_7837816"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7837816)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Probably because they wanted a statically typed language. Something that didn&#x27;t require the JVM and not backed by Google..</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7837844'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7837844' href='vote?id=7837844&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=mathattack" class="hnuser">mathattack</a> <span class="age"><a href="item?id=7837844">on June 3, 2014</a></span> <span id="unv_7837844"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7837844)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">My sense is they wanted &quot;Their&quot; language, as opposed to Go (Google) or Java (Oracle) or another tied in to a vendor.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7849954'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7849954' href='vote?id=7849954&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=taharvey" class="hnuser">taharvey</a> <span class="age"><a href="item?id=7849954">on June 5, 2014</a></span> <span id="unv_7849954"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7849954)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Why does Google get kudos for inventing new languages (Go), and Apple gets mocked? (Swift)</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7838722'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7838722' href='vote?id=7838722&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=briggers" class="hnuser">briggers</a> <span class="age"><a href="item?id=7838722">on June 3, 2014</a></span> <span id="unv_7838722"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838722)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Apple likes to control the whole product as much as possible.<p>The iOS&#x2F;OSX ecosystem is absolutely big enough to support an exclusive language (see Objective-C), and Apple chose to create a new language that matched their goals instead of adapt something they don&#x27;t control and isn&#x27;t ideal.<p>Makes perfect sense, and Swift was by far the most impactful announcement at WWDC.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7838089'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7838089' href='vote?id=7838089&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=oscargrouch" class="hnuser">oscargrouch</a> <span class="age"><a href="item?id=7838089">on June 3, 2014</a></span> <span id="unv_7838089"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838089)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">In one word: Lockin</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
    <tr class='athing comtr ' id='7838331'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7838331' href='vote?id=7838331&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=rev087" class="hnuser">rev087</a> <span class="age"><a href="item?id=7838331">on June 3, 2014</a></span> <span id="unv_7838331"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7838331)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Apple is a big, rich corporation. But in that campus there are still human developers.<p>Radical hypothesis: what if this started as a pet project, got the attention of more employees, then management (with or without convincing from said developers). Management sees the value in the project, and funds it officially. You know, like other big, rich corporations...such as Google.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7838568'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7838568' href='vote?id=7838568&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=toyg" class="hnuser">toyg</a> <span class="age"><a href="item?id=7838568">on June 3, 2014</a></span> <span id="unv_7838568"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7838568)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">When the project lead is one of the creators of LLVM (arguably the most fundamental low-level project in Apple after actual kernels), this sort of scenario is improbable.<p>Much more probable is that somebody asked top-developer Lattner for &quot;a simpler language to compete with Java&#x2F;Dalvik and C# with more casual developers&quot; and he came up with Swift. The name itself is a message: &quot;this thing is quick - quick to learn and quick to run, unlike VM-based stuff that must translate to Obj-C (fast to learn, slow to run) or Obj-C itself (fast to run, slow to learn)&quot;.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
      <tr class='athing comtr ' id='7838479'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7838479' href='vote?id=7838479&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=tluyben2" class="hnuser">tluyben2</a> <span class="age"><a href="item?id=7838479">on June 3, 2014</a></span> <span id="unv_7838479"></span><span class="par"></span> <a class="togg" n="3" href="javascript:void(0)" onclick="return toggle(event, 7838479)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">I would&#x27;ve voted for buying&#x2F;licensing Xamarin instead; C#&#x2F;F# would&#x27;ve given them everything including a lot of fresh programmers. On the other hand i&#x27;m happy they didn&#x27;t as they would&#x27;ve tossed out Android and (at least for me) there is no alternative yet to the speed &#x2F; power of development here.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7839311'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="80"></td><td valign="top" class="votelinks"><center><a id='up_7839311' href='vote?id=7839311&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=orkoden" class="hnuser">orkoden</a> <span class="age"><a href="item?id=7839311">on June 3, 2014</a></span> <span id="unv_7839311"></span><span class="par"></span> <a class="togg" n="2" href="javascript:void(0)" onclick="return toggle(event, 7839311)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Apple has enough programmers developing for their platforms.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7840016'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="120"></td><td valign="top" class="votelinks"><center><a id='up_7840016' href='vote?id=7840016&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=tluyben2" class="hnuser">tluyben2</a> <span class="age"><a href="item?id=7840016">on June 3, 2014</a></span> <span id="unv_7840016"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7840016)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Depends what you call &#x27;enough&#x27; :) I would say there is no &#x27;enough&#x27;, but he.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
        <tr class='athing comtr ' id='7844321'><td>
            <table border='0'>  <tr>    <td class='ind'><img src="s.gif" height="1" width="40"></td><td valign="top" class="votelinks"><center><a id='up_7844321' href='vote?id=7844321&amp;how=up&amp;goto=item%3Fid%3D7835099'><div class='votearrow' title='upvote'></div></a></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px;"><span class="comhead">
          <a href="user?id=jonhendry" class="hnuser">jonhendry</a> <span class="age"><a href="item?id=7844321">on June 4, 2014</a></span> <span id="unv_7844321"></span><span class="par"></span> <a class="togg" n="1" href="javascript:void(0)" onclick="return toggle(event, 7844321)"></a>          <span class='storyon'></span>
                  </span></div><br><div class="comment">
                  <span class="commtext c00">Probably because they wanted one that integrated well with their existing frameworks, and which really took advantage of their investment in LLVM.</span>
              <div class='reply'>        <p><font size="1">
                  </font>
      </div></div></td></tr>
      </table></td></tr>
                  <tr class="morespace" style="height:10px"></tr><tr><td><table border="0"><tr><td><img src="s.gif" height="1" width="0"></td><td><img src="s.gif" height="1" width="14"></td><td class="title"><a href="item?id=7835099&amp;p=2" class="morelink" rel="next">More</a></td></tr></table></td></tr>
      </table>
  </td></tr>
<tr><td><img src="s.gif" height="10" width="0"><table width="100%" cellspacing="0" cellpadding="1"><tr><td bgcolor="#ff6600"></td></tr></table><br><center><span class="yclinks"><a href="newsguidelines.html">Guidelines</a>
        | <a href="newsfaq.html">FAQ</a>
        | <a href="mailto:hn@ycombinator.com">Support</a>
        | <a href="https://github.com/HackerNews/API">API</a>
        | <a href="security.html">Security</a>
        | <a href="lists">Lists</a>
        | <a href="bookmarklet.html" rel="nofollow">Bookmarklet</a>
        | <a href="http://www.ycombinator.com/legal/">Legal</a>
        | <a href="http://www.ycombinator.com/apply/">Apply to YC</a>
        | <a href="mailto:hn@ycombinator.com">Contact</a></span><br><br><form method="get" action="//hn.algolia.com/">Search:
          <input type="text" name="q" value="" size="17" autocorrect="off" spellcheck="false" autocapitalize="off" autocomplete="false"></form>
            </center></td></tr>
      </table></center></body><script type='text/javascript' src='hn.js?mrkzsHFUB3DwAIsyqoaR'></script>
  </html>
